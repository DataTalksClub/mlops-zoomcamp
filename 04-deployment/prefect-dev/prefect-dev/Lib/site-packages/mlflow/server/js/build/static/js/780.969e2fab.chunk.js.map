{"version":3,"file":"static/js/780.969e2fab.chunk.js","mappings":"oMAkBO,SAASA,EAAcC,GAC5B,MAAM,eAAEC,KAAmBC,GAAcF,EACzC,OAEEG,EAAAA,EAAAA,IAACC,EAAAA,IAAW,CAACC,IAAKJ,EAAiBK,EAAOC,oBAAsBD,EAAOE,QAAQC,SAAA,EAE7EC,EAAAA,EAAAA,GAACC,EAAAA,EAAM,CAACN,IAAKC,EAAOM,cACnBX,EAAiBD,EAAMS,UAAWC,EAAAA,EAAAA,GAAA,UAASR,EAAWG,IAAKC,EAAOO,cAGzE,CAEAd,EAAce,aAAe,CAC3Bb,gBAAgB,GAGlB,MAAMK,EAAS,CACbC,oBAAqB,CACnBQ,OAAQ,OACRC,QAAS,OACTC,cAAe,SACf,eAAgB,CACdC,SAAU,IAGdV,QAAS,CAAEW,KAAM,GACjBP,YAAa,CAEXQ,WAAY,GAEdP,UAAW,CACTQ,MAAO,OACPH,SAAU,EACVI,cAAe,I,sJCtBZ,MAAMC,UAA4BC,EAAAA,UAA8DC,WAAAA,GAAA,SAAAC,WAAA,KAOrGC,MAAQ,CACNC,cAAc,EACdC,mBAAmB,EACnB,CAEF,uBAAOC,CAAiBC,EAAeC,GACrC,OAAOD,EAASE,QAAQC,QACNC,IAAZD,EAAEE,SAEFJ,GACAA,EAA2BK,SAASH,EAAEI,KACtCJ,EAAEE,MAAMG,iBAAmBC,EAAAA,GAAWC,0BAK9C,CAEA,+BAAOC,CAAyBC,GAC9B,MAAMf,IAAee,EAAUZ,SAASa,QACpCD,EAAUZ,SAASc,OAAOX,GAAWA,IAAkB,IAAbA,EAAEY,SAG1CC,EAAgBxB,EAAoBO,iBACxCa,EAAUZ,SACVY,EAAUX,4BAGZ,MAAO,CACLJ,eACAC,kBAAmBkB,EAAcH,OAAS,EAC1CG,gBAEJ,CAEAC,kBAAAA,GACE,MAAM,SAAEvC,EAAQ,SAAEsB,EAAQ,cAAEkB,EAAa,qBAAEC,GAAyBC,KAAKnD,OAEnE,aAAE4B,EAAY,kBAAEC,EAAiB,cAAEkB,GAAkBI,KAAKxB,MAC1DyB,EAAyBL,EAAcd,QAAQoB,GAC5CA,EAAcjB,MAAMG,iBAAmBC,EAAAA,GAAWc,oBAG3D,MAAwB,oBAAb7C,EACFA,GAAUmB,EAAcC,EAAmBE,EAAUgB,GACnDnB,GAAgBC,GAAqBsB,KAAKnD,MAAMuD,2BACrDH,EAAuBR,OAAS,GAAKM,EAChCA,GAELrB,GACF2B,EAAaT,GAGRtC,GAGFwC,IAAiBvC,EAAAA,EAAAA,GAAC+C,EAAAA,EAAO,GAClC,CAEAC,MAAAA,GACE,OAAOP,KAAKH,oBACd,EApEWzB,EACJT,aAAe,CACpBiB,SAAU,GACVC,2BAA4B,GAC5BuB,4BAA4B,GAmEzB,MAAMC,EAAgBzB,IAG3B,MADA4B,QAAQvB,MAAM,QAASL,GACjB6B,MAAM,8BAA6B7B,EAASK,QAAQ,EAQ5D,OAAeyB,EAAAA,EAAAA,KAJSC,CAACnC,EAAOoC,KAAQ,CACtChC,UAAUiC,EAAAA,EAAAA,IAAQD,EAASE,WAAYtC,MAGzC,CAAwCJ,E,wGChGjC,MAAMkC,UAAgBjC,EAAAA,UAC3BkC,MAAAA,GACE,OAEEhD,EAAAA,EAAAA,GAAA,OAAKL,IAAM6D,GAAU5D,EAAO6D,QAAQD,EAAOf,KAAKnD,MAAMoE,iBAAiB3D,UACrEC,EAAAA,EAAAA,GAAA,OAAK2D,IAAI,kBAAkBC,IAAKH,KAGtC,EAGF,MAAM7D,EAAS,CAEb6D,QAASA,CAACD,EAAOK,KAAS,CACxBlD,MAAO,IACPmD,UAAW,IACXC,WAAY,OACZC,YAAa,OAEbC,IAAK,CACHC,SAAU,WACVC,QAAS,EACTC,IAAK,MACLC,KAAM,MACN1D,MAAkC,EAA3B6C,EAAMc,QAAQC,WACrBlE,OAAmC,EAA3BmD,EAAMc,QAAQC,WACtBT,WAAYN,EAAMc,QAAQC,WAC1BR,YAAaP,EAAMc,QAAQC,WAC3BC,UAAW,GAAGC,EAAAA,EAAS;;;;;;;;;iCAUvBC,eAAgBb,EAAY,EAAI,U,6FCrC/B,MAAMc,UAA6BC,EAAAA,UAA8B7D,WAAAA,GAAA,SAAAC,WAAA,KACtEC,MAAQ,CAAES,MAAO,KAAO,CAExBmD,iBAAAA,CAAkBnD,EAAYoD,GAC5BrC,KAAKsC,SAAS,CAAErD,UAChBuB,QAAQvB,MAAMA,EAAOoD,EACvB,CAEAE,kBAAAA,CAAmBtD,GACjB,OAAOe,KAAKnD,MAAM2F,iBAAkBxF,EAAAA,EAAAA,IAAA,OAAAM,SAAA,CAAK,kBAAgB2B,EAAMwD,WAAiB,EAClF,CAEAlC,MAAAA,GACE,MAAM,SAAEjD,GAAa0C,KAAKnD,OACpB,MAAEoC,GAAUe,KAAKxB,MACvB,OAAIS,GAEA1B,EAAAA,EAAAA,GAAA,OAAAD,UACEN,EAAAA,EAAAA,IAAA,KAAAM,SAAA,EACEC,EAAAA,EAAAA,GAAA,KAAGmF,UAAU,uCAAuCxF,IAAKyF,EAAWtF,WACpEE,EAAAA,EAAAA,GAAA,QAAAD,SAAM,+CACNC,EAAAA,EAAAA,GAAA,QAAAD,SAAM,qDAGNC,EAAAA,EAAAA,GAAA,KAAGqF,KAAMC,EAAAA,EAAMC,oBAAqBC,OAAO,SAAQzF,SAAC,SAEhD,IACF0C,KAAKuC,mBAAmBtD,QAM3B3B,CACT,EAGF,MAAMqF,EAAa,CACjBtF,QAAS,CACPiE,YAAa,G,sBCrDjB,MAAM0B,GAAAA,EACGC,eAAiB,CACtBC,eAAgB,iBAChBC,YAAa,cACbC,cAAe,gBACfC,aAAc,gBAIlB,K,qOCHO,MAAMC,GACX,EAAAC,EAAAA,eAA+C,MCK3CC,EAAmC,CACvCC,UAAU,EACVxE,MAAO,MAGF,MAAMyE,UAAsBC,EAAAA,UAIjCnF,MAAQgF,EAER,+BAAOI,CAAyB3E,GAC9B,MAAO,CAAEwE,UAAU,E,MAAMxE,EAC3B,CAEA4E,mBAAA,UAAAC,EAAA,YAAqB,WACnB,MAAM7E,MAAEA,GAAU6E,EAAKtF,MAEvB,GAAc,OAAVS,EAAgB,SAAA8E,EAAAxF,UAAAkB,OAHGuE,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA3F,UAAA2F,GAIrBJ,EAAKjH,MAAMsH,UAAU,C,KACnBH,EACAI,OAAQ,mBAGVN,EAAKxB,SAASkB,EAChB,CACF,CAAC,EAXD,GAaApB,iBAAAA,CAAkBnD,EAAcoF,GAC9BrE,KAAKnD,MAAMyH,UAAUrF,EAAOoF,EAC9B,CAEAE,kBAAAA,CACEC,EACAC,GAEA,MAAMhB,SAAEA,GAAazD,KAAKxB,OACpBkG,UAAEA,GAAc1E,KAAKnD,MAQzB4G,GACoB,OAApBgB,EAAUxF,OAqDhB,WAAuD,IAA9B0F,EAAApG,UAAAkB,OAAA,QAAAT,IAAAT,UAAA,GAAAA,UAAA,GAAW,GAAIqG,EAAArG,UAAAkB,OAAA,QAAAT,IAAAT,UAAA,GAAAA,UAAA,GAAW,GACjD,OACEoG,EAAElF,SAAWmF,EAAEnF,QAAUkF,EAAEE,MAAK,CAACC,EAAMC,KAAWC,OAAOC,GAAGH,EAAMF,EAAEG,KAExE,CAxDMG,CAAgBV,EAAUE,UAAWA,KAErC1E,KAAKnD,MAAMsH,UAAU,CACnBgB,KAAMT,EACNU,KAAMZ,EAAUE,UAChBN,OAAQ,SAGVpE,KAAKsC,SAASkB,GAElB,CAEAjD,MAAAA,GACE,MAAMjD,SAAEA,EAAQ+H,eAAEA,EAAcC,kBAAEA,EAAiBC,SAAEA,GACnDvF,KAAKnD,OACD4G,SAAEA,EAAQxE,MAAEA,GAAUe,KAAKxB,MAEjC,IAAIgH,EAAgBlI,EAEpB,GAAImG,EAAU,CACZ,MAAM5G,EAAuB,C,MAC3BoC,EACA4E,mBAAoB7D,KAAK6D,oBAG3B,IAAI,EAAA4B,EAAAA,gBAAeF,GACjBC,EAAgBD,OACX,GAA8B,oBAAnBF,EAChBG,EAAgBH,EAAexI,OAC1B,KAAIyI,EAGT,MAAM,IAAI7E,MACR,8FAHF+E,GAAgB,EAAAE,EAAAA,eAAcJ,EAAmBzI,EAG/C,CAGN,CAEA,OAAO,EAAA6I,EAAAA,eACLpC,EAAqBqC,SACrB,CACEC,MAAO,C,SACLnC,E,MACAxE,EACA4E,mBAAoB7D,KAAK6D,qBAG7B2B,EAEJ,EC5GK,SAASK,EACdD,GAEA,GACW,MAATA,GAC0B,mBAAnBA,EAAMnC,UACuB,oBAA7BmC,EAAM/B,mBAEb,MAAM,IAAIpD,MAAM,kCAGlB,OAAO,CACT,CCLO,SAASqF,IACd,MAAMC,GAAU,EAAAC,EAAAA,YAAW1C,GAE3BuC,EAA2BE,GAE3B,MAAOvH,EAAO8D,IAAY,EAAA2D,EAAAA,UAGvB,CACDhH,MAAO,KACPiH,UAAU,IAGNC,GAAW,EAAAC,EAAAA,UACf,KAAM,CACJC,cAAeA,KACbN,GAASlC,qBACTvB,EAAS,CAAErD,MAAO,KAAMiH,UAAU,GAAQ,EAE5CI,aAAerH,GACbqD,EAAS,C,MACPrD,EACAiH,UAAU,OAGhB,CAACH,GAASlC,qBAGZ,GAAIrF,EAAM0H,SACR,MAAM1H,EAAMS,MAGd,OAAOkH,CACT,C,iCCtCO,SAASI,EACdlI,EACAmI,GAEA,MAAMC,EAAiC5J,IAC9B,EAAA6I,EAAAA,eACLhC,EACA8C,GACA,EAAAd,EAAAA,eAAcrH,EAAWxB,IAKvB6J,EAAOrI,EAAUsI,aAAetI,EAAUqI,MAAQ,UAGxD,OAFAD,EAAQE,YAAc,qBAAqBD,KAEpCD,CACT,C,kFCXA,SAASG,IACP,OACErJ,EAAAA,EAAAA,GAACsJ,EAAAA,IAAK,CACJ,cAAY,WACZC,OAAOvJ,EAAAA,EAAAA,GAACwJ,EAAAA,EAAgB,CAAA5H,GAAA,SAAC6H,eAAe,UACxCC,aACE1J,EAAAA,EAAAA,GAACwJ,EAAAA,EAAgB,CAAA5H,GAAA,SACf6H,eAAe,sDAInBE,OAAO3J,EAAAA,EAAAA,GAAC4J,EAAAA,EAAU,KAGxB,CAEO,SAASC,EAAmBC,GAA6D,IAA5D,SAAE/J,GAAuD+J,EAK3F,OACE9J,EAAAA,EAAAA,GAAC+J,EAAa,CAAChD,QALjB,SAA2BrF,EAAcoF,GACvC7D,QAAQvB,MAAM,4BAA6BA,EAAOoF,EAAKkD,eACzD,EAG6ChC,UAAUhI,EAAAA,EAAAA,GAACqJ,EAAa,IAAItJ,SACpEA,GAGP,CAEO,SAASkK,EACdC,EACApJ,EACAqJ,GAEA,OAAO,SAAoC7K,GACzC,OACEU,EAAAA,EAAAA,GAAC6J,EAAmB,CAAA9J,UAElBC,EAAAA,EAAAA,GAACc,EAAS,IAAKxB,KAGrB,CACF,C,2FC7BO,MAAM8K,EAC6BtJ,GAEtCxB,IASA,MAAM+K,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,KAEf,OACE1K,EAAAA,EAAAA,GAACc,EACC,CACA2J,OAAQA,EACRJ,SAAUA,EACVE,SAAUA,KACLjL,GACL,C,0TCdD,MAAMqL,UAAuB7J,EAAAA,UAClC8J,sBAAAA,CAAuBC,EAAcC,GACnC,OAAOA,EAAiB,GACtB9K,EAAAA,EAAAA,GAACwJ,EAAAA,EAAgB,CAAA5H,GAAA,SACf6H,eAAe,6DAGfsB,OAAQ,CAAEF,UAASC,qBAGrB9K,EAAAA,EAAAA,GAACwJ,EAAAA,EAAgB,CAAA5H,GAAA,SACf6H,eAAe,6CAEfsB,OAAQ,CAAEF,YAGhB,CAEAG,sBAAAA,GACE,OAAOvI,KAAKnD,MAAM2L,cAAc/I,OAAS,CAC3C,CAEAgJ,cAAAA,GACE,MAAM,cAAED,EAAa,SAAEE,EAAQ,SAAEC,GAAa3I,KAAKnD,MAEnD,IAAK6L,GAAgC,IAApBA,EAASjJ,OACxB,OAAO,KAGT,GAAwB,IAApBiJ,EAASjJ,OACX,OAAOlC,EAAAA,EAAAA,GAACqL,EAAAA,GAAI,CAACC,GAAIC,EAAAA,EAAOC,gBAAgBP,EAAc,GAAIE,EAAS,IAAIpL,SAAEqL,EAAS,KAGpF,MAAMK,EAAOhJ,KAAKmI,uBAAuBO,EAASjJ,OAAQ+I,EAAc/I,QACxE,OAAOlC,EAAAA,EAAAA,GAACqL,EAAAA,GAAI,CAACC,GAAIC,EAAAA,EAAOG,uBAAuBP,EAAUF,GAAelL,SAAE0L,GAC5E,CAEAE,iCAAAA,CAAkCb,GAChC,OACE9K,EAAAA,EAAAA,GAACwJ,EAAAA,EAAgB,CAAA5H,GAAA,SACf6H,eAAe,oDAGfsB,OAAQ,CAAED,mBAGhB,CAEAc,qBAAAA,GACE,MAAM,sBAAEC,EAAqB,6BAAEC,EAA4B,cAAEb,EAAa,YAAEc,GAAgBtJ,KAAKnD,MAEjG,GAAIwM,GAAgCD,EAAuB,CACzD,MAAMJ,EAAOhJ,KAAKkJ,kCAAkCE,EAAsB3J,QAC1E,OAAOlC,EAAAA,EAAAA,GAACqL,EAAAA,GAAI,CAACC,GAAIC,EAAAA,EAAOS,+BAA+BH,GAAuB9L,SAAE0L,GAClF,CAEA,GAAIhJ,KAAKuI,yBAA0B,CACjC,MAAMS,EAAOhJ,KAAKkJ,kCAAkCV,EAAc/I,QAClE,OAAOlC,EAAAA,EAAAA,GAACqL,EAAAA,GAAI,CAACC,GAAIC,EAAAA,EAAOS,+BAA+Bf,GAAelL,SAAE0L,GAC1E,CAEA,OAAOzL,EAAAA,EAAAA,GAACqL,EAAAA,GAAI,CAACC,GAAIC,EAAAA,EAAOU,uBAAuBhB,EAAc,IAAIlL,SAAEgM,EAAY,GAAG5C,MACpF,CAEAnG,MAAAA,GACE,MAAM,cAAEiI,EAAa,SAAEE,EAAQ,UAAEe,EAAS,SAAE7B,GAAa5H,KAAKnD,OACxD,mBAAE6M,GAAuB7G,EAAAA,EAAM8G,0BAA0B/B,EAASgC,QAClE9C,EACJ4C,EAAmBjK,OAAS,GAC1BlC,EAAAA,EAAAA,GAACwJ,EAAAA,EAAgB,CAAA5H,GAAA,SAAC6H,eAAe,YAEjC0C,EAAmB,GAEjBG,EAAc,CAAC7J,KAAKmJ,wBAAyBnJ,KAAKyI,kBACxD,OACEzL,EAAAA,EAAAA,IAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,GAACuM,EAAAA,EAAU,CAAChD,MAAOA,EAAO+C,YAAaA,KACvCtM,EAAAA,EAAAA,GAACwM,EAAAA,GAAgB,CAAOvB,gBAAeE,WAAUe,gBAGvD,EAGF,MAYaO,GAAarC,EAAAA,EAAAA,IAAejH,EAAAA,EAAAA,KAZjBC,CAACnC,EAAYoC,KACnC,MAAM,sBAAEwI,EAAqB,6BAAEC,GAAiC7K,EAAMyL,oBAChE,cAAEzB,EAAa,SAAEE,GAAa9H,EAOpC,MAAO,CAAE0I,YALW,OAAlBd,EAAyBA,EAAc0B,KAAKC,IAAsBC,EAAAA,EAAAA,IAAcD,EAAc3L,KAAU,KAKpFmK,SAJLD,EAASwB,KAAKG,IAC7B,MAAMC,GAAUC,EAAAA,EAAAA,IAAWF,EAAS7L,GACpC,OAAOqE,EAAAA,EAAM2H,kBAAkBF,EAASD,EAAQ,IAElBjB,wBAAuBC,+BAA8B,GAG9C3I,CAAyBwH,I,+CClG3D,MAAMuC,UAAuBpM,EAAAA,UAGlCC,WAAAA,CAAYzB,GACV6N,MAAM7N,GAAO,KAHfiE,gBAAU,EAIRd,KAAKc,WAAa,EACpB,CAEA6J,gBAAAA,GAEE,OAAO3K,KAAKnD,MAAM2L,cAAc0B,KAAKC,IACnC,MAAMS,GAAsBC,EAAAA,EAAAA,MAE5B,OADA7K,KAAKnD,MAAMiO,UAASC,EAAAA,EAAAA,IAAiBZ,EAAcS,IAC5CA,CAAmB,GAE9B,CAEAI,iBAAAA,GACE,GAAiC,OAA7BhL,KAAKnD,MAAM2L,cAAwB,CACrC,MAAMyC,EAA2BjL,KAAK2K,mBACtC3K,KAAKc,WAAWoK,QAAQD,EAC1B,CACAjL,KAAKnD,MAAM6L,SAASyC,SAASd,IAE3B,MAAMe,GAAkBP,EAAAA,EAAAA,MACxB7K,KAAKc,WAAWoK,KAAKE,GACrBpL,KAAKnD,MAAMiO,UAASO,EAAAA,EAAAA,IAAUhB,EAASe,GAAiB,GAE5D,CAEAE,iBAAAA,GACE,MAAM,SAAE5C,GAAa1I,KAAKnD,MAC1B,OAAO6L,EAASjJ,QAAU,GACxBlC,EAAAA,EAAAA,GAACyM,EAAU,CACTtB,SAAU1I,KAAKnD,MAAM6L,SACrBe,UAAWzJ,KAAKnD,MAAM4M,UACtBjB,cAAexI,KAAKnD,MAAM2L,iBAG5BjL,EAAAA,EAAAA,GAACgO,EAAAA,EAAY,GAEjB,CAEAhL,MAAAA,GACE,OACEhD,EAAAA,EAAAA,GAACX,EAAAA,EAAa,CAAAU,UACZC,EAAAA,EAAAA,GAACa,EAAAA,GAAmB,CAClB0C,WAAYd,KAAKc,WACjBxD,SAEC0C,KAAKsL,uBAId,EAGF,MAmBME,GAAuB7D,EAAAA,EAAAA,IAAejH,EAAAA,EAAAA,KAnBpBC,CAACnC,EAAYoC,KACnC,MAAM,SAAEgH,GAAahH,EACf6K,EAAeC,IAAAA,MAAS9D,EAASgC,QAEjClB,EAAWiD,KAAKC,MAAMH,EAAa,UAEnChC,EAAYkC,KAAKC,MAAMH,EAAqB,QAClD,IAAIjD,EAAgB,KAKpB,OAJIiD,EAAaI,eAAe,iBAE9BrD,EAAgBmD,KAAKC,MAAMH,EAA0B,cAEhD,CACL/C,WACAe,YACAjB,gBACD,GAGyC9H,CAAyB+J,IAExDqB,GAAatE,EAAAA,EAAAA,GAAkBxE,EAAAA,EAAWC,eAAeE,YAAaqI,GACnF,O,mJC7EO,SAASO,EAAY1E,GAA+B,IAA9B,KAAE2E,GAAyB3E,EACtD,MAAM4E,GACJ1O,EAAAA,EAAAA,GAAC2O,EAAAA,IAAI,CAAA5O,SAEF0O,EAAK9B,KAAIiC,IAAA,IAAC,GAAEhN,EAAE,SAAEiN,EAAQ,QAAEC,EAAO,KAAEzJ,KAAS0J,GAAYH,EAAA,OAEvD5O,EAAAA,EAAAA,GAAC2O,EAAAA,IAAKK,KAAI,CAAUF,QAASA,EAASzJ,KAAMA,EAAM,eAAczD,KAAQmN,EAAUhP,SAC/E8O,GADajN,EAEJ,MAMlB,OAAO6M,EAAKvM,OAAS,GACnBlC,EAAAA,EAAAA,GAACiP,EAAAA,IAAQ,CAACC,QAASR,EAAcS,QAAS,CAAC,SAAUC,UAAU,aAAaC,OAAK,EAAAtP,UAC/EC,EAAAA,EAAAA,GAACsP,EAAAA,EAAM,CACLC,YAAY,kEACZC,MAAMxP,EAAAA,EAAAA,GAACyP,EAAAA,IAAY,IACnB,eAAa,wBACb,aAAW,gCAGb,IACN,CAAC,IAAAC,EAAA,CAAAvG,KAAA,UAAAvJ,OAAA,iBAAA+P,EAAA,CAAAxG,KAAA,SAAAvJ,OAAA,iBAqBM,SAAS2M,EAAWjN,GACzB,MAAM,MACJiK,EAAK,YACL+C,EAAc,GAAE,YAChBsD,EAAc,GAAE,QAChBC,EAAO,SACP9P,EAAQ,WACR+P,GACExQ,GACE,MAAEkE,IAAUuM,EAAAA,EAAAA,KAClB,OACEtQ,EAAAA,EAAAA,IAAAuQ,EAAAA,GAAA,CAAAjQ,SAAA,EACEC,EAAAA,EAAAA,GAACiQ,EAAAA,IAAM,CACL3D,YACEA,EAAYpK,OAAS,IACnBlC,EAAAA,EAAAA,GAACkQ,EAAAA,IAAU,CAACC,sBAAoB,EAAApQ,SAC7BuM,EAAYK,KAAI,CAACtF,EAAG+I,KACnBpQ,EAAAA,EAAAA,GAACkQ,EAAAA,IAAWlB,KAAI,CAAAjP,SAAUsH,GAAJ+I,OAK9BC,QAAStQ,EACTwJ,MAAOA,EAEPqG,aACEnQ,EAAAA,EAAAA,IAAAuQ,EAAAA,GAAA,CAAAjQ,SAAA,CACG8P,IAAW7P,EAAAA,EAAAA,GAACsQ,EAAAA,EAAY,CAAC3Q,IAAG+P,IAC5BE,QAIP5P,EAAAA,EAAAA,GAACC,EAAAA,EACC,CACAN,IAAGgQ,EAIHY,KAAMT,MAId,C,8HCjHO,MAAMQ,EAAexG,IAA4C,IAA3C,UAAE3E,GAAmC2E,EAChE,MAAM,MAAEtG,IAAUuM,EAAAA,EAAAA,KAClB,OACE/P,EAAAA,EAAAA,GAACwQ,EAAAA,IAAG,CAACrL,UAAWA,EAAWxF,KAAG8Q,EAAAA,EAAAA,IAAE,CAAE1M,WAAYP,EAAMkN,QAAQC,IAAI,IAAEC,MAAM,YAAW7Q,UACjFC,EAAAA,EAAAA,GAACwJ,EAAAA,EAAgB,CAAA5H,GAAA,SACf6H,eAAe,kBAGb,C","sources":["common/components/PageContainer.tsx","common/components/RequestStateWrapper.tsx","common/components/Spinner.tsx","common/components/error-boundaries/SectionErrorBoundary.tsx","common/utils/ErrorUtils.tsx","../node_modules/react-error-boundary/dist/src/ErrorBoundaryContext.ts","../node_modules/react-error-boundary/dist/src/ErrorBoundary.ts","../node_modules/react-error-boundary/dist/src/assertErrorBoundaryContext.ts","../node_modules/react-error-boundary/dist/src/useErrorBoundary.ts","../node_modules/react-error-boundary/dist/src/withErrorBoundary.ts","common/utils/withErrorBoundary.tsx","common/utils/withRouterNext.tsx","experiment-tracking/components/MetricView.tsx","experiment-tracking/components/MetricPage.tsx","shared/building_blocks/PageHeader.tsx","shared/building_blocks/PreviewBadge.tsx"],"sourcesContent":["/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React from 'react';\nimport { PageWrapper, Spacer } from '@databricks/design-system';\n\ntype OwnProps = {\n  usesFullHeight?: boolean;\n  children?: React.ReactNode;\n};\n\n// @ts-expect-error TS(2565): Property 'defaultProps' is used before being assig... Remove this comment to see the full error message\ntype Props = OwnProps & typeof PageContainer.defaultProps;\n\nexport function PageContainer(props: Props) {\n  const { usesFullHeight, ...restProps } = props;\n  return (\n    // @ts-expect-error TS(2322): Type '{ height: string; display: string; flexDirec... Remove this comment to see the full error message\n    <PageWrapper css={usesFullHeight ? styles.useFullHeightLayout : styles.wrapper}>\n      {/* @ts-expect-error TS(2322): Type '{ css: { flexShrink: number; }; }' is not as... Remove this comment to see the full error message */}\n      <Spacer css={styles.fixedSpacer} />\n      {usesFullHeight ? props.children : <div {...restProps} css={styles.container} />}\n    </PageWrapper>\n  );\n}\n\nPageContainer.defaultProps = {\n  usesFullHeight: false,\n};\n\nconst styles = {\n  useFullHeightLayout: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    '&:last-child': {\n      flexGrow: 1,\n    },\n  },\n  wrapper: { flex: 1 },\n  fixedSpacer: {\n    // Ensure spacer's fixed height regardless of flex\n    flexShrink: 0,\n  },\n  container: {\n    width: '100%',\n    flexGrow: 1,\n    paddingBottom: 24,\n  },\n};\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React, { Component } from 'react';\nimport './RequestStateWrapper.css';\nimport { connect } from 'react-redux';\nimport { getApis } from '../../experiment-tracking/reducers/Reducers';\nimport { Spinner } from './Spinner';\nimport { ErrorCodes } from '../constants';\n\nexport const DEFAULT_ERROR_MESSAGE = 'A request error occurred.';\n\ntype OwnRequestStateWrapperProps = {\n  customSpinner?: React.ReactNode;\n  shouldOptimisticallyRender?: boolean;\n  requests: any[];\n  requestIdsWith404sToIgnore?: string[];\n  description?: any; // TODO: PropTypes.oneOf(Object.values(LoadingDescription))\n  permissionDeniedView?: React.ReactNode;\n};\n\ntype RequestStateWrapperState = any;\n\ntype RequestStateWrapperProps = OwnRequestStateWrapperProps & typeof RequestStateWrapper.defaultProps;\n\nexport class RequestStateWrapper extends Component<RequestStateWrapperProps, RequestStateWrapperState> {\n  static defaultProps = {\n    requests: [],\n    requestIdsWith404sToIgnore: [],\n    shouldOptimisticallyRender: false,\n  };\n\n  state = {\n    shouldRender: false,\n    shouldRenderError: false,\n  };\n\n  static getErrorRequests(requests: any, requestIdsWith404sToIgnore: any) {\n    return requests.filter((r: any) => {\n      if (r.error !== undefined) {\n        return !(\n          requestIdsWith404sToIgnore &&\n          requestIdsWith404sToIgnore.includes(r.id) &&\n          r.error.getErrorCode() === ErrorCodes.RESOURCE_DOES_NOT_EXIST\n        );\n      }\n      return false;\n    });\n  }\n\n  static getDerivedStateFromProps(nextProps: any) {\n    const shouldRender = nextProps.requests.length\n      ? nextProps.requests.every((r: any) => r && r.active === false)\n      : false;\n\n    const requestErrors = RequestStateWrapper.getErrorRequests(\n      nextProps.requests,\n      nextProps.requestIdsWith404sToIgnore,\n    );\n\n    return {\n      shouldRender,\n      shouldRenderError: requestErrors.length > 0,\n      requestErrors,\n    };\n  }\n\n  getRenderedContent() {\n    const { children, requests, customSpinner, permissionDeniedView } = this.props;\n    // @ts-expect-error TS(2339): Property 'requestErrors' does not exist on type '{... Remove this comment to see the full error message\n    const { shouldRender, shouldRenderError, requestErrors } = this.state;\n    const permissionDeniedErrors = requestErrors.filter((failedRequest: any) => {\n      return failedRequest.error.getErrorCode() === ErrorCodes.PERMISSION_DENIED;\n    });\n\n    if (typeof children === 'function') {\n      return children(!shouldRender, shouldRenderError, requests, requestErrors);\n    } else if (shouldRender || shouldRenderError || this.props.shouldOptimisticallyRender) {\n      if (permissionDeniedErrors.length > 0 && permissionDeniedView) {\n        return permissionDeniedView;\n      }\n      if (shouldRenderError) {\n        triggerError(requestErrors);\n      }\n\n      return children;\n    }\n\n    return customSpinner || <Spinner />;\n  }\n\n  render() {\n    return this.getRenderedContent();\n  }\n}\n\nexport const triggerError = (requests: any) => {\n  // This triggers the OOPS error boundary.\n  console.error('ERROR', requests);\n  throw Error(`${DEFAULT_ERROR_MESSAGE}: ${requests.error}`);\n};\n\n// @ts-expect-error TS(7006): Parameter 'state' implicitly has an 'any' type.\nconst mapStateToProps = (state, ownProps) => ({\n  requests: getApis(ownProps.requestIds, state),\n});\n\nexport default connect(mapStateToProps)(RequestStateWrapper);\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React, { Component } from 'react';\nimport spinner from '../static/mlflow-spinner.png';\nimport { keyframes } from '@emotion/react';\n\ntype Props = {\n  showImmediately?: boolean;\n};\n\nexport class Spinner extends Component<Props> {\n  render() {\n    return (\n      // @ts-expect-error TS(2322): Type '(theme: Theme) => { width: number; marginTop... Remove this comment to see the full error message\n      <div css={(theme) => styles.spinner(theme, this.props.showImmediately)}>\n        <img alt=\"Page loading...\" src={spinner} />\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  // @ts-expect-error TS(7006): Parameter 'theme' implicitly has an 'any' type.\n  spinner: (theme, immediate) => ({\n    width: 100,\n    marginTop: 100,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n\n    img: {\n      position: 'absolute',\n      opacity: 0,\n      top: '50%',\n      left: '50%',\n      width: theme.general.heightBase * 2,\n      height: theme.general.heightBase * 2,\n      marginTop: -theme.general.heightBase,\n      marginLeft: -theme.general.heightBase,\n      animation: `${keyframes`\n          0% {\n            opacity: 1;\n          }\n          100% {\n            opacity: 1;\n            -webkit-transform: rotate(360deg);\n                transform: rotate(360deg);\n            }\n          `} 3s linear infinite`,\n      animationDelay: immediate ? 0 : '0.5s',\n    },\n  }),\n};\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React from 'react';\nimport Utils from '../../utils/Utils';\n\ntype Props = {\n  showServerError?: boolean;\n};\n\ntype State = any;\n\nexport class SectionErrorBoundary extends React.Component<Props, State> {\n  state = { error: null };\n\n  componentDidCatch(error: any, errorInfo: any) {\n    this.setState({ error });\n    console.error(error, errorInfo);\n  }\n\n  renderErrorMessage(error: any) {\n    return this.props.showServerError ? <div>Error message: {error.message}</div> : '';\n  }\n\n  render() {\n    const { children } = this.props;\n    const { error } = this.state;\n    if (error) {\n      return (\n        <div>\n          <p>\n            <i className=\"fa fa-exclamation-triangle icon-fail\" css={classNames.wrapper} />\n            <span> Something went wrong with this section. </span>\n            <span>If this error persists, please report an issue </span>\n            {/* Reported during ESLint upgrade */}\n            {/* eslint-disable-next-line react/jsx-no-target-blank */}\n            <a href={Utils.getSupportPageUrl()} target=\"_blank\">\n              here\n            </a>\n            .{this.renderErrorMessage(error)}\n          </p>\n        </div>\n      );\n    }\n\n    return children;\n  }\n}\n\nconst classNames = {\n  wrapper: {\n    marginLeft: -2, // to align the failure icon with the collapsable section caret toggle\n  },\n};\n","import React from 'react';\n\nclass ErrorUtils {\n  static mlflowServices = {\n    MODEL_REGISTRY: 'Model Registry',\n    EXPERIMENTS: 'Experiments',\n    MODEL_SERVING: 'Model Serving',\n    RUN_TRACKING: 'Run Tracking',\n  };\n}\n\nexport default ErrorUtils;\n","import { createContext } from \"react\";\n\nexport type ErrorBoundaryContextType = {\n  didCatch: boolean;\n  error: any;\n  resetErrorBoundary: (...args: any[]) => void;\n};\n\nexport const ErrorBoundaryContext =\n  createContext<ErrorBoundaryContextType | null>(null);\n","import {\n  Component,\n  createElement,\n  ErrorInfo,\n  isValidElement,\n  PropsWithChildren,\n  PropsWithRef,\n  ReactElement,\n} from \"react\";\nimport { ErrorBoundaryContext } from \"./ErrorBoundaryContext\";\nimport { ErrorBoundaryProps, FallbackProps } from \"./types\";\n\ntype ErrorBoundaryState = { didCatch: boolean; error: any };\n\nconst initialState: ErrorBoundaryState = {\n  didCatch: false,\n  error: null,\n};\n\nexport class ErrorBoundary extends Component<\n  PropsWithRef<PropsWithChildren<ErrorBoundaryProps>>,\n  ErrorBoundaryState\n> {\n  state = initialState;\n\n  static getDerivedStateFromError(error: Error) {\n    return { didCatch: true, error };\n  }\n\n  resetErrorBoundary = (...args: any[]) => {\n    const { error } = this.state;\n\n    if (error !== null) {\n      this.props.onReset?.({\n        args,\n        reason: \"imperative-api\",\n      });\n\n      this.setState(initialState);\n    }\n  };\n\n  componentDidCatch(error: Error, info: ErrorInfo) {\n    this.props.onError?.(error, info);\n  }\n\n  componentDidUpdate(\n    prevProps: ErrorBoundaryProps,\n    prevState: ErrorBoundaryState\n  ) {\n    const { didCatch } = this.state;\n    const { resetKeys } = this.props;\n\n    // There's an edge case where if the thing that triggered the error happens to *also* be in the resetKeys array,\n    // we'd end up resetting the error boundary immediately.\n    // This would likely trigger a second error to be thrown.\n    // So we make sure that we don't check the resetKeys on the first call of cDU after the error is set.\n\n    if (\n      didCatch &&\n      prevState.error !== null &&\n      hasArrayChanged(prevProps.resetKeys, resetKeys)\n    ) {\n      this.props.onReset?.({\n        next: resetKeys,\n        prev: prevProps.resetKeys,\n        reason: \"keys\",\n      });\n\n      this.setState(initialState);\n    }\n  }\n\n  render() {\n    const { children, fallbackRender, FallbackComponent, fallback } =\n      this.props;\n    const { didCatch, error } = this.state;\n\n    let childToRender = children;\n\n    if (didCatch) {\n      const props: FallbackProps = {\n        error,\n        resetErrorBoundary: this.resetErrorBoundary,\n      };\n\n      if (isValidElement(fallback)) {\n        childToRender = fallback;\n      } else if (typeof fallbackRender === \"function\") {\n        childToRender = fallbackRender(props);\n      } else if (FallbackComponent) {\n        childToRender = createElement(FallbackComponent, props);\n      } else {\n        throw new Error(\n          \"react-error-boundary requires either a fallback, fallbackRender, or FallbackComponent prop\"\n        );\n      }\n    }\n\n    return createElement(\n      ErrorBoundaryContext.Provider,\n      {\n        value: {\n          didCatch,\n          error,\n          resetErrorBoundary: this.resetErrorBoundary,\n        },\n      },\n      childToRender\n    ) as ReactElement;\n  }\n}\n\nfunction hasArrayChanged(a: any[] = [], b: any[] = []) {\n  return (\n    a.length !== b.length || a.some((item, index) => !Object.is(item, b[index]))\n  );\n}\n","import { ErrorBoundaryContextType } from \"./ErrorBoundaryContext\";\n\nexport function assertErrorBoundaryContext(\n  value: any\n): value is ErrorBoundaryContextType {\n  if (\n    value == null ||\n    typeof value.didCatch !== \"boolean\" ||\n    typeof value.resetErrorBoundary !== \"function\"\n  ) {\n    throw new Error(\"ErrorBoundaryContext not found\");\n  }\n\n  return true;\n}\n","import { useContext, useMemo, useState } from \"react\";\nimport { assertErrorBoundaryContext } from \"./assertErrorBoundaryContext\";\nimport { ErrorBoundaryContext } from \"./ErrorBoundaryContext\";\n\nexport type UseErrorBoundaryApi<Error> = {\n  resetBoundary: () => void;\n  showBoundary: (error: Error) => void;\n};\n\nexport function useErrorBoundary<Error = any>(): UseErrorBoundaryApi<Error> {\n  const context = useContext(ErrorBoundaryContext);\n\n  assertErrorBoundaryContext(context);\n\n  const [state, setState] = useState<{\n    error: Error | null;\n    hasError: boolean;\n  }>({\n    error: null,\n    hasError: false,\n  });\n\n  const memoized = useMemo(\n    () => ({\n      resetBoundary: () => {\n        context?.resetErrorBoundary();\n        setState({ error: null, hasError: false });\n      },\n      showBoundary: (error: Error) =>\n        setState({\n          error,\n          hasError: true,\n        }),\n    }),\n    [context?.resetErrorBoundary]\n  );\n\n  if (state.hasError) {\n    throw state.error;\n  }\n\n  return memoized;\n}\n","import { ComponentType, createElement } from \"react\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\nimport { ErrorBoundaryProps } from \"./types\";\n\nexport function withErrorBoundary<Props extends Object>(\n  Component: ComponentType<Props>,\n  errorBoundaryProps: ErrorBoundaryProps\n): ComponentType<Props> {\n  const Wrapped: ComponentType<Props> = (props: Props) => {\n    return createElement(\n      ErrorBoundary,\n      errorBoundaryProps,\n      createElement(Component, props)\n    );\n  };\n\n  // Format for display in DevTools\n  const name = Component.displayName || Component.name || \"Unknown\";\n  Wrapped.displayName = `withErrorBoundary(${name})`;\n\n  return Wrapped;\n}\n","import React from 'react';\nimport { ErrorBoundary } from 'react-error-boundary';\nimport ErrorUtils from './ErrorUtils';\nimport { DangerIcon, Empty } from '@databricks/design-system';\nimport { FormattedMessage } from 'react-intl';\n\nexport type ErrorBoundaryProps = {\n  children: React.Component;\n};\n\nfunction ErrorFallback() {\n  return (\n    <Empty\n      data-testid=\"fallback\"\n      title={<FormattedMessage defaultMessage=\"Error\" description=\"Title of editor error fallback component\" />}\n      description={\n        <FormattedMessage\n          defaultMessage=\"An error occurred while rendering this component.\"\n          description=\"Description of error fallback component\"\n        />\n      }\n      image={<DangerIcon />}\n    />\n  );\n}\n\nexport function CustomErrorBoundary({ children }: React.PropsWithChildren<ErrorBoundaryProps>) {\n  function logErrorToConsole(error: Error, info: { componentStack: string }) {\n    console.error('Caught Unexpected Error: ', error, info.componentStack);\n  }\n\n  return (\n    <ErrorBoundary onError={logErrorToConsole} fallback={<ErrorFallback />}>\n      {children}\n    </ErrorBoundary>\n  );\n}\n\nexport function withErrorBoundary<P>(\n  service: string,\n  Component: React.ComponentType<P>,\n  errorMessage?: React.ReactNode,\n): React.ComponentType<P> {\n  return function CustomErrorBoundaryWrapper(props: P) {\n    return (\n      <CustomErrorBoundary>\n        {/* @ts-expect-error Generics don't play well with WithConditionalCSSProp type coming @emotion/react jsx typing to validate css= prop values typing. More details here: emotion-js/emotion#2169 */}\n        <Component {...props} />\n      </CustomErrorBoundary>\n    );\n  };\n}\n","import React from 'react';\n\nimport {\n  type Location,\n  type Params as RouterDOMParams,\n  type NavigateOptions,\n  type To,\n  useLocation,\n  useNavigate,\n  useParams,\n} from '../../common/utils/RoutingUtils';\n\nexport interface WithRouterNextProps<Params extends RouterDOMParams = RouterDOMParams> {\n  navigate: ReturnType<typeof useNavigate>;\n  location: Location;\n  params: Params;\n}\n\n/**\n * This HoC serves as a retrofit for class components enabling them to use\n * react-router v6's location, navigate and params being injected via props.\n */\nexport const withRouterNext =\n  <Props, Params extends RouterDOMParams>(Component: React.ComponentType<Props & WithRouterNextProps<Params>>) =>\n  (\n    props: Omit<\n      Props,\n      | 'location'\n      | 'navigate'\n      | 'params'\n      | 'navigationType'\n      /* prettier-ignore*/\n    >,\n  ) => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const params = useParams<Params>();\n\n    return (\n      <Component\n        /* prettier-ignore */\n        params={params as Params}\n        location={location}\n        navigate={navigate}\n        {...(props as Props)}\n      />\n    );\n  };\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\nimport Utils from '../../common/utils/Utils';\nimport './MetricView.css';\nimport { getExperiment, getRunInfo } from '../reducers/Reducers';\nimport MetricsPlotPanel from './MetricsPlotPanel';\nimport { Link } from '../../common/utils/RoutingUtils';\nimport type { Location } from '../../common/utils/RoutingUtils';\nimport { PageHeader } from '../../shared/building_blocks/PageHeader';\nimport Routes from '../routes';\nimport { withRouterNext } from '../../common/utils/withRouterNext';\n\ntype MetricViewImplProps = {\n  experiments: any[]; // TODO: PropTypes.instanceOf(Experiment)\n  experimentIds: string[];\n  comparedExperimentIds?: string[];\n  hasComparedExperimentsBefore?: boolean;\n  runUuids: string[];\n  runNames: string[];\n  metricKey: string;\n  location: Location;\n};\n\nexport class MetricViewImpl extends Component<MetricViewImplProps> {\n  getCompareRunsPageText(numRuns: any, numExperiments: any) {\n    return numExperiments > 1 ? (\n      <FormattedMessage\n        defaultMessage=\"Comparing {numRuns} Runs from {numExperiments} Experiments\"\n        // eslint-disable-next-line max-len\n        description=\"Breadcrumb title for compare runs page with multiple experiments\"\n        values={{ numRuns, numExperiments }}\n      />\n    ) : (\n      <FormattedMessage\n        defaultMessage=\"Comparing {numRuns} Runs from 1 Experiment\"\n        description=\"Breadcrumb title for compare runs page with single experiment\"\n        values={{ numRuns }}\n      />\n    );\n  }\n\n  hasMultipleExperiments() {\n    return this.props.experimentIds.length > 1;\n  }\n\n  getRunPageLink() {\n    const { experimentIds, runUuids, runNames } = this.props;\n\n    if (!runUuids || runUuids.length === 0) {\n      return null;\n    }\n\n    if (runUuids.length === 1) {\n      return <Link to={Routes.getRunPageRoute(experimentIds[0], runUuids[0])}>{runNames[0]}</Link>;\n    }\n\n    const text = this.getCompareRunsPageText(runUuids.length, experimentIds.length);\n    return <Link to={Routes.getCompareRunPageRoute(runUuids, experimentIds)}>{text}</Link>;\n  }\n\n  getCompareExperimentsPageLinkText(numExperiments: any) {\n    return (\n      <FormattedMessage\n        defaultMessage=\"Displaying Runs from {numExperiments} Experiments\"\n        // eslint-disable-next-line max-len\n        description=\"Breadcrumb nav item to link to the compare-experiments page on compare runs page\"\n        values={{ numExperiments }}\n      />\n    );\n  }\n\n  getExperimentPageLink() {\n    const { comparedExperimentIds, hasComparedExperimentsBefore, experimentIds, experiments } = this.props;\n\n    if (hasComparedExperimentsBefore && comparedExperimentIds) {\n      const text = this.getCompareExperimentsPageLinkText(comparedExperimentIds.length);\n      return <Link to={Routes.getCompareExperimentsPageRoute(comparedExperimentIds)}>{text}</Link>;\n    }\n\n    if (this.hasMultipleExperiments()) {\n      const text = this.getCompareExperimentsPageLinkText(experimentIds.length);\n      return <Link to={Routes.getCompareExperimentsPageRoute(experimentIds)}>{text}</Link>;\n    }\n\n    return <Link to={Routes.getExperimentPageRoute(experimentIds[0])}>{experiments[0].name}</Link>;\n  }\n\n  render() {\n    const { experimentIds, runUuids, metricKey, location } = this.props;\n    const { selectedMetricKeys } = Utils.getMetricPlotStateFromUrl(location.search);\n    const title =\n      selectedMetricKeys.length > 1 ? (\n        <FormattedMessage defaultMessage=\"Metrics\" description=\"Title for metrics page\" />\n      ) : (\n        selectedMetricKeys[0]\n      );\n    const breadcrumbs = [this.getExperimentPageLink(), this.getRunPageLink()];\n    return (\n      <div>\n        <PageHeader title={title} breadcrumbs={breadcrumbs} />\n        <MetricsPlotPanel {...{ experimentIds, runUuids, metricKey }} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => {\n  const { comparedExperimentIds, hasComparedExperimentsBefore } = state.compareExperiments;\n  const { experimentIds, runUuids } = ownProps;\n  const experiments =\n    experimentIds !== null ? experimentIds.map((experimentId: any) => getExperiment(experimentId, state)) : null;\n  const runNames = runUuids.map((runUuid: any) => {\n    const runInfo = getRunInfo(runUuid, state);\n    return Utils.getRunDisplayName(runInfo, runUuid);\n  });\n  return { experiments, runNames, comparedExperimentIds, hasComparedExperimentsBefore };\n};\n\nexport const MetricView = withRouterNext(connect(mapStateToProps)(MetricViewImpl));\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport qs from 'qs';\nimport { getExperimentApi, getRunApi } from '../actions';\nimport RequestStateWrapper from '../../common/components/RequestStateWrapper';\nimport NotFoundPage from './NotFoundPage';\nimport { MetricView } from './MetricView';\nimport { getUUID } from '../../common/utils/ActionUtils';\nimport { PageContainer } from '../../common/components/PageContainer';\nimport { withRouterNext } from '../../common/utils/withRouterNext';\nimport type { WithRouterNextProps } from '../../common/utils/withRouterNext';\nimport { withErrorBoundary } from '../../common/utils/withErrorBoundary';\nimport ErrorUtils from '../../common/utils/ErrorUtils';\n\ntype MetricPageImplProps = {\n  runUuids: string[];\n  metricKey: string;\n  experimentIds?: string[];\n  dispatch: (...args: any[]) => any;\n};\n\nexport class MetricPageImpl extends Component<MetricPageImplProps> {\n  requestIds: any;\n\n  constructor(props: MetricPageImplProps) {\n    super(props);\n    this.requestIds = [];\n  }\n\n  fetchExperiments() {\n    // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n    return this.props.experimentIds.map((experimentId) => {\n      const experimentRequestId = getUUID();\n      this.props.dispatch(getExperimentApi(experimentId, experimentRequestId));\n      return experimentRequestId;\n    });\n  }\n\n  componentDidMount() {\n    if (this.props.experimentIds !== null) {\n      const getExperimentsRequestIds = this.fetchExperiments();\n      this.requestIds.push(...getExperimentsRequestIds);\n    }\n    this.props.runUuids.forEach((runUuid) => {\n      // Fetch tags for each run. TODO: it'd be nice if we could just fetch the tags directly\n      const getRunRequestId = getUUID();\n      this.requestIds.push(getRunRequestId);\n      this.props.dispatch(getRunApi(runUuid, getRunRequestId));\n    });\n  }\n\n  renderPageContent() {\n    const { runUuids } = this.props;\n    return runUuids.length >= 1 ? (\n      <MetricView\n        runUuids={this.props.runUuids}\n        metricKey={this.props.metricKey}\n        experimentIds={this.props.experimentIds}\n      />\n    ) : (\n      <NotFoundPage />\n    );\n  }\n\n  render() {\n    return (\n      <PageContainer>\n        <RequestStateWrapper\n          requestIds={this.requestIds}\n          // eslint-disable-next-line no-trailing-spaces\n        >\n          {this.renderPageContent()}\n        </RequestStateWrapper>\n      </PageContainer>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: WithRouterNextProps<{ metricKey: string }>) => {\n  const { location } = ownProps;\n  const searchValues = qs.parse(location.search);\n  // @ts-expect-error TS(2345): Argument of type 'string | string[] | ParsedQs | P... Remove this comment to see the full error message\n  const runUuids = JSON.parse(searchValues['?runs']);\n  // @ts-expect-error TS(2345): Argument of type 'string | string[] | ParsedQs | P... Remove this comment to see the full error message\n  const metricKey = JSON.parse(searchValues['metric']);\n  let experimentIds = null;\n  if (searchValues.hasOwnProperty('experiments')) {\n    // @ts-expect-error TS(2345): Argument of type 'string | string[] | ParsedQs | P... Remove this comment to see the full error message\n    experimentIds = JSON.parse(searchValues['experiments']);\n  }\n  return {\n    runUuids,\n    metricKey,\n    experimentIds,\n  };\n};\n\nconst MetricPageWithRouter = withRouterNext(connect(mapStateToProps)(MetricPageImpl));\n\nexport const MetricPage = withErrorBoundary(ErrorUtils.mlflowServices.EXPERIMENTS, MetricPageWithRouter);\nexport default MetricPage;\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React from 'react';\nimport {\n  Breadcrumb,\n  Button,\n  Spacer,\n  Dropdown,\n  Menu,\n  Header,\n  OverflowIcon,\n  useDesignSystemTheme,\n} from '@databricks/design-system';\n\nimport { PreviewBadge } from './PreviewBadge';\n\ntype OverflowMenuProps = {\n  menu?: {\n    id: string;\n    itemName: React.ReactNode;\n    onClick?: (...args: any[]) => any;\n    href?: string;\n  }[];\n};\n\nexport function OverflowMenu({ menu }: OverflowMenuProps) {\n  const overflowMenu = (\n    <Menu>\n      {/* @ts-expect-error TS(2532): Object is possibly 'undefined'. */}\n      {menu.map(({ id, itemName, onClick, href, ...otherProps }) => (\n        // @ts-expect-error TS(2769): No overload matches this call.\n        <Menu.Item key={id} onClick={onClick} href={href} data-test-id={id} {...otherProps}>\n          {itemName}\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n\n  // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n  return menu.length > 0 ? (\n    <Dropdown overlay={overflowMenu} trigger={['click']} placement=\"bottomLeft\" arrow>\n      <Button\n        componentId=\"codegen_mlflow_app_src_shared_building_blocks_pageheader.tsx_54\"\n        icon={<OverflowIcon />}\n        data-test-id=\"overflow-menu-trigger\"\n        aria-label=\"Open header dropdown menu\"\n      />\n    </Dropdown>\n  ) : null;\n}\n\ntype PageHeaderProps = {\n  title: React.ReactNode;\n  breadcrumbs?: React.ReactNode[];\n  preview?: boolean;\n  feedbackForm?: string;\n  infoPopover?: React.ReactNode;\n  children?: React.ReactNode;\n  spacerSize?: 'xs' | 'sm' | 'md' | 'lg';\n  titleAddOns?: React.ReactNode | React.ReactNode[];\n};\n\n/**\n * A page header that includes:\n *   - title,\n *   - optional breadcrumb content,\n *   - optional preview mark,\n *   - optional feedback link, and\n *   - optional info popover, safe to have link inside.\n */\nexport function PageHeader(props: PageHeaderProps) {\n  const {\n    title, // required\n    breadcrumbs = [],\n    titleAddOns = [],\n    preview,\n    children,\n    spacerSize,\n  } = props;\n  const { theme } = useDesignSystemTheme();\n  return (\n    <>\n      <Header\n        breadcrumbs={\n          breadcrumbs.length > 0 && (\n            <Breadcrumb includeTrailingCaret>\n              {breadcrumbs.map((b, i) => (\n                <Breadcrumb.Item key={i}>{b}</Breadcrumb.Item>\n              ))}\n            </Breadcrumb>\n          )\n        }\n        buttons={children}\n        title={title}\n        // prettier-ignore\n        titleAddOns={\n          <>\n            {preview && <PreviewBadge css={{ marginLeft: 0 }} />}\n            {titleAddOns}\n          </>\n        }\n      />\n      <Spacer\n        // @ts-expect-error TS(2322): Type '{ css: { flexShrink: number; }; }' is not as... Remove this comment to see the full error message\n        css={{\n          // Ensure spacer's fixed height\n          flexShrink: 0,\n        }}\n        size={spacerSize}\n      />\n    </>\n  );\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Tag, useDesignSystemTheme } from '@databricks/design-system';\nexport const PreviewBadge = ({ className }: { className?: string }) => {\n  const { theme } = useDesignSystemTheme();\n  return (\n    <Tag className={className} css={{ marginLeft: theme.spacing.xs }} color=\"turquoise\">\n      <FormattedMessage\n        defaultMessage=\"Experimental\"\n        description=\"Experimental badge shown for features which are experimental\"\n      />\n    </Tag>\n  );\n};\n"],"names":["PageContainer","props","usesFullHeight","restProps","_jsxs","PageWrapper","css","styles","useFullHeightLayout","wrapper","children","_jsx","Spacer","fixedSpacer","container","defaultProps","height","display","flexDirection","flexGrow","flex","flexShrink","width","paddingBottom","RequestStateWrapper","Component","constructor","arguments","state","shouldRender","shouldRenderError","getErrorRequests","requests","requestIdsWith404sToIgnore","filter","r","undefined","error","includes","id","getErrorCode","ErrorCodes","RESOURCE_DOES_NOT_EXIST","getDerivedStateFromProps","nextProps","length","every","active","requestErrors","getRenderedContent","customSpinner","permissionDeniedView","this","permissionDeniedErrors","failedRequest","PERMISSION_DENIED","shouldOptimisticallyRender","triggerError","Spinner","render","console","Error","connect","mapStateToProps","ownProps","getApis","requestIds","theme","spinner","showImmediately","alt","src","immediate","marginTop","marginLeft","marginRight","img","position","opacity","top","left","general","heightBase","animation","keyframes","animationDelay","SectionErrorBoundary","React","componentDidCatch","errorInfo","setState","renderErrorMessage","showServerError","message","className","classNames","href","Utils","getSupportPageUrl","target","ErrorUtils","mlflowServices","MODEL_REGISTRY","EXPERIMENTS","MODEL_SERVING","RUN_TRACKING","$ebb31c7feaa4405e$export$b16d9fb1a22de840","$hgUW1$createContext","$44d7e150ebc754d2$var$initialState","didCatch","$44d7e150ebc754d2$export$e926676385687eaf","$hgUW1$Component","getDerivedStateFromError","resetErrorBoundary","_this","_len","args","Array","_key","onReset","reason","info","onError","componentDidUpdate","prevProps","prevState","resetKeys","a","b","some","item","index","Object","is","$44d7e150ebc754d2$var$hasArrayChanged","next","prev","fallbackRender","FallbackComponent","fallback","childToRender","$hgUW1$isValidElement","$hgUW1$createElement","Provider","value","$75c9d331f9c1ed1a$export$f20aa86254872370","$7c3c25b3f398a9d6$export$c052f6604b7d51fe","context","$hgUW1$useContext","$hgUW1$useState","hasError","memoized","$hgUW1$useMemo","resetBoundary","showBoundary","$62ff477d53f02a5b$export$f0c7a449e0cfaec7","errorBoundaryProps","Wrapped","name","displayName","ErrorFallback","Empty","title","FormattedMessage","defaultMessage","description","image","DangerIcon","CustomErrorBoundary","_ref","ErrorBoundary","componentStack","withErrorBoundary","service","errorMessage","withRouterNext","location","useLocation","navigate","useNavigate","params","useParams","MetricViewImpl","getCompareRunsPageText","numRuns","numExperiments","values","hasMultipleExperiments","experimentIds","getRunPageLink","runUuids","runNames","Link","to","Routes","getRunPageRoute","text","getCompareRunPageRoute","getCompareExperimentsPageLinkText","getExperimentPageLink","comparedExperimentIds","hasComparedExperimentsBefore","experiments","getCompareExperimentsPageRoute","getExperimentPageRoute","metricKey","selectedMetricKeys","getMetricPlotStateFromUrl","search","breadcrumbs","PageHeader","MetricsPlotPanel","MetricView","compareExperiments","map","experimentId","getExperiment","runUuid","runInfo","getRunInfo","getRunDisplayName","MetricPageImpl","super","fetchExperiments","experimentRequestId","getUUID","dispatch","getExperimentApi","componentDidMount","getExperimentsRequestIds","push","forEach","getRunRequestId","getRunApi","renderPageContent","NotFoundPage","MetricPageWithRouter","searchValues","qs","JSON","parse","hasOwnProperty","MetricPage","OverflowMenu","menu","overflowMenu","Menu","_ref2","itemName","onClick","otherProps","Item","Dropdown","overlay","trigger","placement","arrow","Button","componentId","icon","OverflowIcon","_ref3","_ref4","titleAddOns","preview","spacerSize","useDesignSystemTheme","_Fragment","Header","Breadcrumb","includeTrailingCaret","i","buttons","PreviewBadge","size","Tag","_css","spacing","xs","color"],"sourceRoot":""}