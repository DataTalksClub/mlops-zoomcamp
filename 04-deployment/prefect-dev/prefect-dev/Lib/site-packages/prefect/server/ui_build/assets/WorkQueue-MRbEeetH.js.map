{"version":3,"file":"WorkQueue-MRbEeetH.js","sources":["../../src/compositions/useToast.ts","../../src/pages/WorkQueue.vue"],"sourcesContent":["import { showToast, Toast } from '@prefecthq/prefect-design'\nimport { onUnmounted } from 'vue'\n\n/**\n * The useToast composition returns a callable that can be used in place of showToast to automatically dismiss any toasts created during the component's lifecycle\n * @returns () => Toast\n */\nexport function useToast(): typeof showToast {\n  const toasts: Toast[] = []\n\n  onUnmounted(() => toasts.forEach(toast => toast.dismiss()))\n\n  return (...args: Parameters<typeof showToast>) => {\n    const toast = showToast(...args)\n    toasts.push(toast)\n    return toast\n  }\n}","<template>\n  <p-layout-default class=\"work-queue\">\n    <template #header>\n      <PageHeadingWorkQueue\n        v-if=\"workQueue\"\n        :work-queue=\"workQueue\"\n        @update=\"workQueueSubscription.refresh\"\n        @delete=\"routeToQueues\"\n      />\n    </template>\n\n    <p-layout-well class=\"work-queue__body\">\n      <template #header>\n        <CodeBanner :command=\"workQueueCliCommand\" title=\"Work queue is ready to go!\" subtitle=\"Work queues define the work to be done and agents poll a specific work queue for new work.\" />\n      </template>\n\n      <p-tabs v-model:selected=\"selectedTab\" :tabs=\"tabs\">\n        <template #details>\n          <WorkQueueDetails v-if=\"workQueue\" :work-queue=\"workQueue\" />\n        </template>\n\n        <template #upcoming-runs>\n          <div class=\"work-queue__upcoming-runs\">\n            <WorkQueueFlowRunsList v-if=\"workQueue\" :work-queue=\"workQueue\" />\n            <template v-if=\"activeRunsBuildUp\">\n              <p-button class=\"work-queue__active-runs-button\" @click=\"showActiveRuns\">\n                Show active runs\n              </p-button>\n            </template>\n          </div>\n        </template>\n\n        <template #runs>\n          <FlowRunFilteredList :filter=\"flowRunFilter\" prefix=\"runs\" />\n        </template>\n      </p-tabs>\n\n      <template #well>\n        <WorkQueueDetails v-if=\"workQueue\" alternate :work-queue=\"workQueue\" />\n      </template>\n    </p-layout-well>\n  </p-layout-default>\n</template>\n\n\n<script lang=\"ts\" setup>\n  import { media } from '@prefecthq/prefect-design'\n  import { WorkQueueDetails, PageHeadingWorkQueue, FlowRunFilteredList, WorkQueueFlowRunsList, CodeBanner, localization, useWorkspaceApi, useFlowRunsFilter, useFlowRunsFilterFromRoute } from '@prefecthq/prefect-ui-library'\n  import { useSubscription, useRouteParam } from '@prefecthq/vue-compositions'\n  import { computed, watch, ref } from 'vue'\n  import { useRouter } from 'vue-router'\n  import { useToast } from '@/compositions'\n  import { usePageTitle } from '@/compositions/usePageTitle'\n  import { routes } from '@/router'\n\n  const router = useRouter()\n  const api = useWorkspaceApi()\n  const showToast = useToast()\n\n  const tabs = computed(() => {\n    const values = ['Upcoming Runs', 'Runs']\n\n    if (!media.xl) {\n      values.unshift('Details')\n    }\n\n    return values\n  })\n\n  const workQueueId = useRouteParam('workQueueId')\n  const workQueueCliCommand = computed(() => `prefect agent start ${workQueue.value ? ` --work-queue \"${workQueue.value.name}\"` : ''}`)\n\n  const selectedTab = ref<string | undefined>()\n\n  const subscriptionOptions = {\n    interval: 300000,\n  }\n\n  const workQueueSubscription = useSubscription(api.workQueues.getWorkQueue, [workQueueId.value], subscriptionOptions)\n  const workQueue = computed(() => workQueueSubscription.response)\n  const workQueueConcurrency = computed(() => workQueue.value?.concurrencyLimit)\n  const workQueuePaused = computed(() => workQueue.value?.isPaused)\n  const activeRunsBuildUp = computed(() => !!(workQueueConcurrency.value && workQueueConcurrency.value <= activeFlowRunsCount.value && !workQueuePaused.value))\n  const workQueueName = computed(() => workQueue.value ? [workQueue.value.name] : [])\n\n  const { filter: flowRunFilter } = useFlowRunsFilterFromRoute({\n    flowRuns: {\n      workQueueName: workQueueName,\n    },\n  }, 'runs')\n\n  const showActiveRuns = (): void => {\n    selectedTab.value = 'runs'\n    flowRunFilter.flowRuns.state.name = ['Running', 'Pending']\n  }\n  const routeToQueues = (): void => {\n    router.push(routes.workQueues())\n  }\n\n  const title = computed(() => {\n    if (!workQueue.value) {\n      return 'Work Queue'\n    }\n    return `Work Queue: ${workQueue.value.name}`\n  })\n\n  const { filter: activeFlowRunsFilter } = useFlowRunsFilter({\n    flowRuns: {\n      state: {\n        name: ['Running', 'Pending'],\n      },\n      workQueueName: workQueueName.value,\n    },\n  })\n\n  const flowRunsCountSubscription = useSubscription(api.flowRuns.getFlowRunsCount, [activeFlowRunsFilter], { interval: 30000 })\n  const activeFlowRunsCount = computed(() => flowRunsCountSubscription.response ?? 0)\n\n\n  usePageTitle(title)\n\n  watch(() => workQueue.value?.deprecated, value => {\n    if (value) {\n      showToast(localization.info.deprecatedWorkQueue, 'default', { dismissible: false, timeout: false })\n    }\n  })\n</script>\n\n<style>\n/* This is an override since this is using nested layouts */\n.work-queue__body {\n  @apply\n  p-0\n}\n\n.work-queue__controls-list,\n.work-queue__upcoming-runs { @apply\n  grid\n  gap-2\n}\n.work-queue__active-runs-button { @apply\n  justify-self-center\n}\n</style>"],"names":["useToast","toasts","onUnmounted","toast","args","showToast","router","useRouter","api","useWorkspaceApi","tabs","computed","values","media","workQueueId","useRouteParam","workQueueCliCommand","workQueue","selectedTab","ref","subscriptionOptions","workQueueSubscription","useSubscription","workQueueConcurrency","_a","workQueuePaused","activeRunsBuildUp","activeFlowRunsCount","workQueueName","flowRunFilter","useFlowRunsFilterFromRoute","showActiveRuns","routeToQueues","routes","title","activeFlowRunsFilter","useFlowRunsFilter","flowRunsCountSubscription","usePageTitle","watch","value","localization"],"mappings":"4SAOO,SAASA,IAA6B,CAC3C,MAAMC,EAAkB,CAAA,EAExB,OAAAC,EAAY,IAAMD,EAAO,WAAiBE,EAAM,QAAS,CAAA,CAAC,EAEnD,IAAIC,IAAuC,CAC1C,MAAAD,EAAQE,EAAU,GAAGD,CAAI,EAC/B,OAAAH,EAAO,KAAKE,CAAK,EACVA,CAAA,CAEX,gFCsCE,MAAMG,EAASC,IACTC,EAAMC,IACNJ,EAAYL,KAEZU,EAAOC,EAAS,IAAM,CACpB,MAAAC,EAAS,CAAC,gBAAiB,MAAM,EAEnC,OAACC,EAAM,IACTD,EAAO,QAAQ,SAAS,EAGnBA,CAAA,CACR,EAEKE,EAAcC,EAAc,aAAa,EACzCC,EAAsBL,EAAS,IAAM,uBAAuBM,EAAU,MAAQ,kBAAkBA,EAAU,MAAM,IAAI,IAAM,EAAE,EAAE,EAE9HC,EAAcC,IAEdC,EAAsB,CAC1B,SAAU,GAAA,EAGNC,EAAwBC,EAAgBd,EAAI,WAAW,aAAc,CAACM,EAAY,KAAK,EAAGM,CAAmB,EAC7GH,EAAYN,EAAS,IAAMU,EAAsB,QAAQ,EACzDE,EAAuBZ,EAAS,IAAA,OAAM,OAAAa,EAAAP,EAAU,QAAV,YAAAO,EAAiB,iBAAgB,EACvEC,EAAkBd,EAAS,IAAA,OAAM,OAAAa,EAAAP,EAAU,QAAV,YAAAO,EAAiB,SAAQ,EAC1DE,EAAoBf,EAAS,IAAM,CAAC,EAAEY,EAAqB,OAASA,EAAqB,OAASI,EAAoB,OAAS,CAACF,EAAgB,MAAM,EACtJG,EAAgBjB,EAAS,IAAMM,EAAU,MAAQ,CAACA,EAAU,MAAM,IAAI,EAAI,CAAA,CAAE,EAE5E,CAAE,OAAQY,CAAc,EAAIC,EAA2B,CAC3D,SAAU,CACR,cAAAF,CACF,GACC,MAAM,EAEHG,EAAiB,IAAY,CACjCb,EAAY,MAAQ,OACpBW,EAAc,SAAS,MAAM,KAAO,CAAC,UAAW,SAAS,CAAA,EAErDG,EAAgB,IAAY,CACzB1B,EAAA,KAAK2B,GAAO,WAAY,CAAA,CAAA,EAG3BC,EAAQvB,EAAS,IAChBM,EAAU,MAGR,eAAeA,EAAU,MAAM,IAAI,GAFjC,YAGV,EAEK,CAAE,OAAQkB,CAAqB,EAAIC,EAAkB,CACzD,SAAU,CACR,MAAO,CACL,KAAM,CAAC,UAAW,SAAS,CAC7B,EACA,cAAeR,EAAc,KAC/B,CAAA,CACD,EAEKS,EAA4Bf,EAAgBd,EAAI,SAAS,iBAAkB,CAAC2B,CAAoB,EAAG,CAAE,SAAU,GAAO,CAAA,EACtHR,EAAsBhB,EAAS,IAAM0B,EAA0B,UAAY,CAAC,EAGlF,OAAAC,GAAaJ,CAAK,EAElBK,EAAM,IAAA,OAAM,OAAAf,EAAAP,EAAU,QAAV,YAAAO,EAAiB,YAAqBgB,GAAA,CAC5CA,GACQnC,EAAAoC,GAAa,KAAK,oBAAqB,UAAW,CAAE,YAAa,GAAO,QAAS,EAAA,CAAO,CACpG,CACD"}