{"version":3,"file":"Flow-BvKNddLa.js","sources":["../../src/components/FlowStats.vue","../../src/pages/Flow.vue"],"sourcesContent":["<template>\n  <div class=\"flow-stats\">\n    <div class=\"flow-stats__cards\">\n      <FlowRunHistoryCard :filter=\"flowRunsFilter\" />\n      <CumulativeTaskRunsCard :filter=\"taskRunsFilter\" />\n    </div>\n    <DateRangeSelect v-model=\"filter.range\" small />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\n  import {\n    CumulativeTaskRunsCard,\n    FlowRunHistoryCard,\n    subscriptionIntervalKey,\n    mapper,\n    useWorkspaceDashboardFilterFromRoute,\n    DateRangeSelect\n  } from '@prefecthq/prefect-ui-library'\n  import { secondsInDay, secondsToMilliseconds } from 'date-fns'\n  import { computed, provide, toRefs } from 'vue'\n\n  const props = defineProps<{\n    flowId: string,\n  }>()\n\n  const { flowId } = toRefs(props)\n\n  const filter = useWorkspaceDashboardFilterFromRoute({\n    range: { type: 'span', seconds: -secondsInDay },\n    tags: [],\n  })\n\n  const flowStats = computed(() => ({\n    flowId: flowId.value,\n    range: filter.range,\n  }))\n\n  provide(subscriptionIntervalKey, {\n    interval: secondsToMilliseconds(30),\n  })\n\n  const flowRunsFilter = computed(() => mapper.map('FlowStatsFilter', flowStats.value, 'FlowRunsFilter'))\n  const taskRunsFilter = computed(() => mapper.map('FlowStatsFilter', flowStats.value, 'TaskRunsFilter'))\n</script>\n\n<style>\n.flow-stats { @apply\n  w-full\n  flex\n  flex-col\n  gap-4\n  items-center\n}\n\n.flow-stats__cards { @apply\n  w-full\n  grid\n  gap-5\n  sm:grid-cols-2\n}\n</style>","<template>\n  <p-layout-default class=\"flow\">\n    <template #header>\n      <PageHeadingFlow v-if=\"flow\" :flow=\"flow\" @delete=\"deleteFlow\" />\n    </template>\n\n    <FlowStats v-if=\"flow\" :flow-id=\"flow.id\" />\n\n    <p-tabs v-model:selected=\"tab\" :tabs=\"tabs\">\n      <template #details>\n        <FlowDetails v-if=\"flow\" :flow=\"flow\" />\n      </template>\n\n      <template #deployments>\n        <DeploymentsList :filter=\"deploymentsFilter\" prefix=\"deployments\" />\n      </template>\n\n      <template #runs>\n        <FlowRunFilteredList :filter=\"flowRunsFilter\" selectable prefix=\"runs\" />\n      </template>\n    </p-tabs>\n  </p-layout-default>\n</template>\n\n<script lang=\"ts\" setup>\n  import { DeploymentsList, PageHeadingFlow, FlowDetails, FlowRunFilteredList, useWorkspaceApi, useFlowRunsFilter, useDeploymentsFilter } from '@prefecthq/prefect-ui-library'\n  import { useSubscription, useRouteParam, useRouteQueryParam } from '@prefecthq/vue-compositions'\n  import { computed } from 'vue'\n  import { useRouter } from 'vue-router'\n  import FlowStats from '@/components/FlowStats.vue'\n  import { usePageTitle } from '@/compositions/usePageTitle'\n  import { routes } from '@/router/routes'\n\n  const api = useWorkspaceApi()\n  const flowId = useRouteParam('flowId')\n  const flowIds = computed(() => [flowId.value])\n  const router = useRouter()\n  const tab = useRouteQueryParam('tab', 'Runs')\n  const tabs = ['Runs', 'Deployments', 'Details']\n\n  const subscriptionOptions = {\n    interval: 300000,\n  }\n\n  const flowSubscription = useSubscription(api.flows.getFlow, [flowId.value], subscriptionOptions)\n  const flow = computed(() => flowSubscription.response)\n\n  const { filter: flowRunsFilter } = useFlowRunsFilter({\n    flows: {\n      id: flowIds,\n    },\n  })\n\n  const { filter: deploymentsFilter } = useDeploymentsFilter({\n    flows: {\n      id: flowIds,\n    },\n  })\n\n  function deleteFlow(): void {\n    router.push(routes.flows())\n  }\n\n  const title = computed(() => {\n    if (!flow.value) {\n      return 'Flow'\n    }\n    return `Flow: ${flow.value.name}`\n  })\n  usePageTitle(title)\n</script>"],"names":["props","__props","flowId","toRefs","filter","useWorkspaceDashboardFilterFromRoute","secondsInDay","flowStats","computed","provide","subscriptionIntervalKey","secondsToMilliseconds","flowRunsFilter","mapper","taskRunsFilter","api","useWorkspaceApi","useRouteParam","flowIds","router","useRouter","tab","useRouteQueryParam","tabs","subscriptionOptions","flowSubscription","useSubscription","flow","useFlowRunsFilter","deploymentsFilter","useDeploymentsFilter","deleteFlow","routes","title","usePageTitle"],"mappings":"geAsBE,MAAMA,EAAQC,EAIR,CAAE,OAAAC,CAAA,EAAWC,EAAOH,CAAK,EAEzBI,EAASC,EAAqC,CAClD,MAAO,CAAE,KAAM,OAAQ,QAAS,CAACC,CAAa,EAC9C,KAAM,CAAC,CAAA,CACR,EAEKC,EAAYC,EAAS,KAAO,CAChC,OAAQN,EAAO,MACf,MAAOE,EAAO,KACd,EAAA,EAEFK,EAAQC,EAAyB,CAC/B,SAAUC,EAAsB,EAAE,CAAA,CACnC,EAEK,MAAAC,EAAiBJ,EAAS,IAAMK,EAAO,IAAI,kBAAmBN,EAAU,MAAO,gBAAgB,CAAC,EAChGO,EAAiBN,EAAS,IAAMK,EAAO,IAAI,kBAAmBN,EAAU,MAAO,gBAAgB,CAAC,wRCVtG,MAAMQ,EAAMC,IACNd,EAASe,EAAc,QAAQ,EAC/BC,EAAUV,EAAS,IAAM,CAACN,EAAO,KAAK,CAAC,EACvCiB,EAASC,IACTC,EAAMC,EAAmB,MAAO,MAAM,EACtCC,EAAO,CAAC,OAAQ,cAAe,SAAS,EAExCC,EAAsB,CAC1B,SAAU,GAAA,EAGNC,EAAmBC,EAAgBX,EAAI,MAAM,QAAS,CAACb,EAAO,KAAK,EAAGsB,CAAmB,EACzFG,EAAOnB,EAAS,IAAMiB,EAAiB,QAAQ,EAE/C,CAAE,OAAQb,CAAe,EAAIgB,EAAkB,CACnD,MAAO,CACL,GAAIV,CACN,CAAA,CACD,EAEK,CAAE,OAAQW,CAAkB,EAAIC,EAAqB,CACzD,MAAO,CACL,GAAIZ,CACN,CAAA,CACD,EAED,SAASa,GAAmB,CACnBZ,EAAA,KAAKa,EAAO,MAAO,CAAA,CAC5B,CAEM,MAAAC,EAAQzB,EAAS,IAChBmB,EAAK,MAGH,SAASA,EAAK,MAAM,IAAI,GAFtB,MAGV,EACD,OAAAO,EAAaD,CAAK"}