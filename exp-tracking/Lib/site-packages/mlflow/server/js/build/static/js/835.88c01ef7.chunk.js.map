{"version":3,"file":"static/js/835.88c01ef7.chunk.js","mappings":"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","sources":["common/utils/ErrorUtils.tsx","../node_modules/react-error-boundary/dist/src/ErrorBoundaryContext.ts","../node_modules/react-error-boundary/dist/src/ErrorBoundary.ts","../node_modules/react-error-boundary/dist/src/assertErrorBoundaryContext.ts","../node_modules/react-error-boundary/dist/src/useErrorBoundary.ts","../node_modules/react-error-boundary/dist/src/withErrorBoundary.ts","common/utils/withErrorBoundary.tsx","common/utils/withRouterNext.tsx","experiment-tracking/components/DirectRunPage.tsx"],"sourcesContent":["import React from 'react';\n\nclass ErrorUtils {\n  static mlflowServices = {\n    MODEL_REGISTRY: 'Model Registry',\n    EXPERIMENTS: 'Experiments',\n    MODEL_SERVING: 'Model Serving',\n    RUN_TRACKING: 'Run Tracking',\n  };\n}\n\nexport default ErrorUtils;\n","import { createContext } from \"react\";\n\nexport type ErrorBoundaryContextType = {\n  didCatch: boolean;\n  error: any;\n  resetErrorBoundary: (...args: any[]) => void;\n};\n\nexport const ErrorBoundaryContext =\n  createContext<ErrorBoundaryContextType | null>(null);\n","import {\n  Component,\n  createElement,\n  ErrorInfo,\n  isValidElement,\n  PropsWithChildren,\n  PropsWithRef,\n  ReactElement,\n} from \"react\";\nimport { ErrorBoundaryContext } from \"./ErrorBoundaryContext\";\nimport { ErrorBoundaryProps, FallbackProps } from \"./types\";\n\ntype ErrorBoundaryState = { didCatch: boolean; error: any };\n\nconst initialState: ErrorBoundaryState = {\n  didCatch: false,\n  error: null,\n};\n\nexport class ErrorBoundary extends Component<\n  PropsWithRef<PropsWithChildren<ErrorBoundaryProps>>,\n  ErrorBoundaryState\n> {\n  state = initialState;\n\n  static getDerivedStateFromError(error: Error) {\n    return { didCatch: true, error };\n  }\n\n  resetErrorBoundary = (...args: any[]) => {\n    const { error } = this.state;\n\n    if (error !== null) {\n      this.props.onReset?.({\n        args,\n        reason: \"imperative-api\",\n      });\n\n      this.setState(initialState);\n    }\n  };\n\n  componentDidCatch(error: Error, info: ErrorInfo) {\n    this.props.onError?.(error, info);\n  }\n\n  componentDidUpdate(\n    prevProps: ErrorBoundaryProps,\n    prevState: ErrorBoundaryState\n  ) {\n    const { didCatch } = this.state;\n    const { resetKeys } = this.props;\n\n    // There's an edge case where if the thing that triggered the error happens to *also* be in the resetKeys array,\n    // we'd end up resetting the error boundary immediately.\n    // This would likely trigger a second error to be thrown.\n    // So we make sure that we don't check the resetKeys on the first call of cDU after the error is set.\n\n    if (\n      didCatch &&\n      prevState.error !== null &&\n      hasArrayChanged(prevProps.resetKeys, resetKeys)\n    ) {\n      this.props.onReset?.({\n        next: resetKeys,\n        prev: prevProps.resetKeys,\n        reason: \"keys\",\n      });\n\n      this.setState(initialState);\n    }\n  }\n\n  render() {\n    const { children, fallbackRender, FallbackComponent, fallback } =\n      this.props;\n    const { didCatch, error } = this.state;\n\n    let childToRender = children;\n\n    if (didCatch) {\n      const props: FallbackProps = {\n        error,\n        resetErrorBoundary: this.resetErrorBoundary,\n      };\n\n      if (isValidElement(fallback)) {\n        childToRender = fallback;\n      } else if (typeof fallbackRender === \"function\") {\n        childToRender = fallbackRender(props);\n      } else if (FallbackComponent) {\n        childToRender = createElement(FallbackComponent, props);\n      } else {\n        throw new Error(\n          \"react-error-boundary requires either a fallback, fallbackRender, or FallbackComponent prop\"\n        );\n      }\n    }\n\n    return createElement(\n      ErrorBoundaryContext.Provider,\n      {\n        value: {\n          didCatch,\n          error,\n          resetErrorBoundary: this.resetErrorBoundary,\n        },\n      },\n      childToRender\n    ) as ReactElement;\n  }\n}\n\nfunction hasArrayChanged(a: any[] = [], b: any[] = []) {\n  return (\n    a.length !== b.length || a.some((item, index) => !Object.is(item, b[index]))\n  );\n}\n","import { ErrorBoundaryContextType } from \"./ErrorBoundaryContext\";\n\nexport function assertErrorBoundaryContext(\n  value: any\n): value is ErrorBoundaryContextType {\n  if (\n    value == null ||\n    typeof value.didCatch !== \"boolean\" ||\n    typeof value.resetErrorBoundary !== \"function\"\n  ) {\n    throw new Error(\"ErrorBoundaryContext not found\");\n  }\n\n  return true;\n}\n","import { useContext, useMemo, useState } from \"react\";\nimport { assertErrorBoundaryContext } from \"./assertErrorBoundaryContext\";\nimport { ErrorBoundaryContext } from \"./ErrorBoundaryContext\";\n\nexport type UseErrorBoundaryApi<Error> = {\n  resetBoundary: () => void;\n  showBoundary: (error: Error) => void;\n};\n\nexport function useErrorBoundary<Error = any>(): UseErrorBoundaryApi<Error> {\n  const context = useContext(ErrorBoundaryContext);\n\n  assertErrorBoundaryContext(context);\n\n  const [state, setState] = useState<{\n    error: Error | null;\n    hasError: boolean;\n  }>({\n    error: null,\n    hasError: false,\n  });\n\n  const memoized = useMemo(\n    () => ({\n      resetBoundary: () => {\n        context?.resetErrorBoundary();\n        setState({ error: null, hasError: false });\n      },\n      showBoundary: (error: Error) =>\n        setState({\n          error,\n          hasError: true,\n        }),\n    }),\n    [context?.resetErrorBoundary]\n  );\n\n  if (state.hasError) {\n    throw state.error;\n  }\n\n  return memoized;\n}\n","import { ComponentType, createElement } from \"react\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\nimport { ErrorBoundaryProps } from \"./types\";\n\nexport function withErrorBoundary<Props extends Object>(\n  Component: ComponentType<Props>,\n  errorBoundaryProps: ErrorBoundaryProps\n): ComponentType<Props> {\n  const Wrapped: ComponentType<Props> = (props: Props) => {\n    return createElement(\n      ErrorBoundary,\n      errorBoundaryProps,\n      createElement(Component, props)\n    );\n  };\n\n  // Format for display in DevTools\n  const name = Component.displayName || Component.name || \"Unknown\";\n  Wrapped.displayName = `withErrorBoundary(${name})`;\n\n  return Wrapped;\n}\n","import React from 'react';\nimport { ErrorBoundary } from 'react-error-boundary';\nimport ErrorUtils from './ErrorUtils';\nimport { DangerIcon, Empty } from '@databricks/design-system';\nimport { FormattedMessage } from 'react-intl';\n\nexport type ErrorBoundaryProps = {\n  children: React.Component;\n};\n\nfunction ErrorFallback() {\n  return (\n    <Empty\n      data-testid=\"fallback\"\n      title={<FormattedMessage defaultMessage=\"Error\" description=\"Title of editor error fallback component\" />}\n      description={\n        <FormattedMessage\n          defaultMessage=\"An error occurred while rendering this component.\"\n          description=\"Description of error fallback component\"\n        />\n      }\n      image={<DangerIcon />}\n    />\n  );\n}\n\nexport function CustomErrorBoundary({ children }: React.PropsWithChildren<ErrorBoundaryProps>) {\n  function logErrorToConsole(error: Error, info: { componentStack: string }) {\n    console.error('Caught Unexpected Error: ', error, info.componentStack);\n  }\n\n  return (\n    <ErrorBoundary onError={logErrorToConsole} fallback={<ErrorFallback />}>\n      {children}\n    </ErrorBoundary>\n  );\n}\n\nexport function withErrorBoundary<P>(\n  service: string,\n  Component: React.ComponentType<P>,\n  errorMessage?: React.ReactNode,\n): React.ComponentType<P> {\n  return function CustomErrorBoundaryWrapper(props: P) {\n    return (\n      <CustomErrorBoundary>\n        {/* @ts-expect-error Generics don't play well with WithConditionalCSSProp type coming @emotion/react jsx typing to validate css= prop values typing. More details here: emotion-js/emotion#2169 */}\n        <Component {...props} />\n      </CustomErrorBoundary>\n    );\n  };\n}\n","import React from 'react';\n\nimport {\n  type Location,\n  type Params as RouterDOMParams,\n  type NavigateOptions,\n  type To,\n  useLocation,\n  useNavigate,\n  useParams,\n} from '../../common/utils/RoutingUtils';\n\nexport interface WithRouterNextProps<Params extends RouterDOMParams = RouterDOMParams> {\n  navigate: ReturnType<typeof useNavigate>;\n  location: Location;\n  params: Params;\n}\n\n/**\n * This HoC serves as a retrofit for class components enabling them to use\n * react-router v6's location, navigate and params being injected via props.\n */\nexport const withRouterNext =\n  <Props, Params extends RouterDOMParams>(Component: React.ComponentType<Props & WithRouterNextProps<Params>>) =>\n  (\n    props: Omit<\n      Props,\n      | 'location'\n      | 'navigate'\n      | 'params'\n      | 'navigationType'\n      /* prettier-ignore*/\n    >,\n  ) => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const params = useParams<Params>();\n\n    return (\n      <Component\n        /* prettier-ignore */\n        params={params as Params}\n        location={location}\n        navigate={navigate}\n        {...(props as Props)}\n      />\n    );\n  };\n","import { PageWrapper, LegacySkeleton } from '@databricks/design-system';\nimport { useEffect, useState } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { useParams, useNavigate } from '../../common/utils/RoutingUtils';\nimport { ErrorWrapper } from '../../common/utils/ErrorWrapper';\nimport Utils from '../../common/utils/Utils';\nimport { ReduxState } from '../../redux-types';\nimport { getRunApi } from '../actions';\nimport Routes from '../routes';\nimport { PageNotFoundView } from '../../common/components/PageNotFoundView';\nimport { WithRouterNextProps, withRouterNext } from '../../common/utils/withRouterNext';\nimport { withErrorBoundary } from '../../common/utils/withErrorBoundary';\nimport ErrorUtils from '../../common/utils/ErrorUtils';\n\nexport const DirectRunPageImpl = (props: any) => {\n  const { runUuid } = useParams<{ runUuid: string }>();\n  const [error, setError] = useState<ErrorWrapper>();\n  const navigate = useNavigate();\n\n  const dispatch = useDispatch();\n\n  // Reset error after changing requested run\n  useEffect(() => {\n    setError(undefined);\n  }, [runUuid]);\n\n  useEffect(() => {\n    // Start fetching run info if it doesn't exist in the store yet\n    if (!props.runInfo && runUuid) {\n      const action = getRunApi(runUuid);\n      action.payload.catch((e) => {\n        Utils.logErrorAndNotifyUser(e);\n        setError(e);\n      });\n      dispatch(action);\n    }\n  }, [dispatch, runUuid, props.runInfo]);\n\n  useEffect(() => {\n    if (props.runInfo?.experimentId) {\n      navigate(Routes.getRunPageRoute(props.runInfo.experimentId, props.runInfo.runUuid), {\n        replace: true,\n      });\n    }\n  }, [navigate, props.runInfo]);\n\n  // If encountered 404 error, display a proper component\n  if (error?.status === 404) {\n    return <PageNotFoundView />;\n  }\n\n  // If the run is loading, display skeleton\n  return (\n    <PageWrapper>\n      <LegacySkeleton />\n    </PageWrapper>\n  );\n};\n\nconst DirectRunPageWithRouter = withRouterNext(\n  connect((state: ReduxState, ownProps: WithRouterNextProps<{ runUuid: string }>) => {\n    return { runInfo: state.entities.runInfosByUuid[ownProps.params.runUuid] };\n  })(DirectRunPageImpl),\n);\n\nexport const DirectRunPage = withErrorBoundary(ErrorUtils.mlflowServices.RUN_TRACKING, DirectRunPageWithRouter);\n\nexport default DirectRunPage;\n"],"names":["ErrorUtils","mlflowServices","MODEL_REGISTRY","EXPERIMENTS","MODEL_SERVING","RUN_TRACKING","$ebb31c7feaa4405e$export$b16d9fb1a22de840","$hgUW1$createContext","$44d7e150ebc754d2$var$initialState","didCatch","error","$44d7e150ebc754d2$export$e926676385687eaf","$hgUW1$Component","state","getDerivedStateFromError","resetErrorBoundary","_this","_len","arguments","length","args","Array","_key","props","onReset","reason","setState","componentDidCatch","info","this","onError","componentDidUpdate","prevProps","prevState","resetKeys","a","undefined","b","some","item","index","Object","is","$44d7e150ebc754d2$var$hasArrayChanged","next","prev","render","children","fallbackRender","FallbackComponent","fallback","childToRender","$hgUW1$isValidElement","Error","$hgUW1$createElement","Provider","value","$75c9d331f9c1ed1a$export$f20aa86254872370","$7c3c25b3f398a9d6$export$c052f6604b7d51fe","context","$hgUW1$useContext","$hgUW1$useState","hasError","memoized","$hgUW1$useMemo","resetBoundary","showBoundary","$62ff477d53f02a5b$export$f0c7a449e0cfaec7","Component","errorBoundaryProps","Wrapped","name","displayName","ErrorFallback","_jsx","Empty","title","FormattedMessage","id","defaultMessage","description","image","DangerIcon","CustomErrorBoundary","_ref","ErrorBoundary","console","componentStack","withErrorBoundary","service","errorMessage","withRouterNext","location","useLocation","navigate","useNavigate","params","useParams","DirectRunPageImpl","runUuid","setError","useState","dispatch","useDispatch","useEffect","runInfo","action","getRunApi","payload","catch","e","Utils","logErrorAndNotifyUser","_props$runInfo","experimentId","Routes","getRunPageRoute","replace","status","PageNotFoundView","PageWrapper","LegacySkeleton","DirectRunPageWithRouter","connect","ownProps","entities","runInfosByUuid","DirectRunPage"],"sourceRoot":""}