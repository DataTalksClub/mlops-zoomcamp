{"version":3,"file":"static/js/367.da0c5fb2.chunk.js","mappings":"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","sources":["common/components/CollapsibleSection.tsx","experiment-tracking/components/CompareRunView.tsx","experiment-tracking/components/CompareRunPage.tsx"],"sourcesContent":["/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React from 'react';\nimport { Collapse } from 'antd';\nimport { useIntl } from 'react-intl';\nimport { SectionErrorBoundary } from './error-boundaries/SectionErrorBoundary';\nimport { ChevronRightIcon, importantify, useDesignSystemTheme } from '@databricks/design-system';\n\ntype OwnProps = {\n  title: string | any;\n  forceOpen?: boolean;\n  children: React.ReactNode;\n  showServerError?: boolean;\n  defaultCollapsed?: boolean;\n  onChange?: (...args: any[]) => any;\n};\n\n// @ts-expect-error TS(2565): Property 'defaultProps' is used before being assig... Remove this comment to see the full error message\ntype Props = OwnProps & typeof CollapsibleSection.defaultProps;\n\nexport function CollapsibleSection(props: Props) {\n  const { title, forceOpen, showServerError, defaultCollapsed, onChange } = props;\n  // We need to spread `activeKey` into <Collapse/> as an optional prop because its enumerability\n  // affects rendering, i.e. passing `activeKey={undefined}` is different from not passing activeKey\n  const activeKeyProp = forceOpen && { activeKey: ['1'] };\n  const defaultActiveKey = defaultCollapsed ? null : ['1'];\n  const { formatMessage } = useIntl();\n  const { theme } = useDesignSystemTheme();\n\n  return (\n    <Collapse\n      className=\"collapsible-section\"\n      // @ts-expect-error TS(2322): Type '{ '.collapsible-panel': { position: string; ... Remove this comment to see the full error message\n      css={classNames.wrapper}\n      bordered={false}\n      {...activeKeyProp}\n      // @ts-expect-error TS(2322): Type 'string[] | null' is not assignable to type '... Remove this comment to see the full error message\n      defaultActiveKey={defaultActiveKey}\n      expandIcon={({ isActive }) => (\n        // Font-size !important because antd's css clobbers any sort of svg size here.\n        <ChevronRightIcon\n          aria-label={\n            isActive\n              ? formatMessage(\n                  {\n                    defaultMessage: 'collapse {title}',\n                    description: 'Common component > collapsible section > alternative label when expand',\n                  },\n                  { title },\n                )\n              : formatMessage(\n                  {\n                    defaultMessage: 'expand {title}',\n                    description: 'Common component > collapsible section > alternative label when collapsed',\n                  },\n                  { title },\n                )\n          }\n          css={{ fontSize: '20px!important' }}\n          rotate={isActive ? 90 : 0}\n        />\n      )}\n      onChange={onChange}\n    >\n      <Collapse.Panel\n        className=\"collapsible-panel\"\n        header={title}\n        key=\"1\"\n        css={{\n          '&, .ant-collapse-header, .ant-collapse-content': importantify({\n            color: theme.colors.textPrimary,\n          }),\n        }}\n      >\n        <SectionErrorBoundary showServerError={showServerError}>{props.children}</SectionErrorBoundary>\n      </Collapse.Panel>\n    </Collapse>\n  );\n}\n\nconst classNames = {\n  wrapper: {\n    '.collapsible-panel': {\n      position: 'relative',\n    },\n    '& > .collapsible-panel > [role=\"button\"]:focus': {\n      outline: 'revert',\n    },\n  },\n};\n\nCollapsibleSection.defaultProps = {\n  forceOpen: false,\n};\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { Spacer, Switch, Tabs, Tooltip } from '@databricks/design-system';\n\nimport { getExperiment, getParams, getRunInfo, getRunTags } from '../reducers/Reducers';\nimport './CompareRunView.css';\nimport { CompareRunScatter } from './CompareRunScatter';\nimport { CompareRunBox } from './CompareRunBox';\nimport CompareRunContour from './CompareRunContour';\nimport Routes from '../routes';\nimport { Link } from '../../common/utils/RoutingUtils';\nimport { getLatestMetrics } from '../reducers/MetricReducer';\nimport CompareRunUtil from './CompareRunUtil';\nimport Utils from '../../common/utils/Utils';\nimport ParallelCoordinatesPlotPanel from './ParallelCoordinatesPlotPanel';\nimport { PageHeader } from '../../shared/building_blocks/PageHeader';\nimport { CollapsibleSection } from '../../common/components/CollapsibleSection';\nimport { shouldDisableLegacyRunCompareCharts } from '../../common/utils/FeatureUtils';\nimport { RunInfoEntity } from '../types';\n\nconst { TabPane } = Tabs;\n\ntype CompareRunViewProps = {\n  experiments: any[]; // TODO: PropTypes.instanceOf(Experiment)\n  experimentIds: string[];\n  comparedExperimentIds?: string[];\n  hasComparedExperimentsBefore?: boolean;\n  runInfos: RunInfoEntity[];\n  runUuids: string[];\n  metricLists: any[][];\n  paramLists: any[][];\n  tagLists: any[][];\n  runNames: string[];\n  runDisplayNames: string[];\n  intl: {\n    formatMessage: (...args: any[]) => any;\n  };\n};\n\ntype CompareRunViewState = any;\nexport class CompareRunView extends Component<CompareRunViewProps, CompareRunViewState> {\n  compareRunViewRef: any;\n  runDetailsTableRef: any;\n\n  constructor(props: CompareRunViewProps) {\n    super(props);\n    this.state = {\n      tableWidth: null,\n      onlyShowParamDiff: false,\n      onlyShowTagDiff: false,\n      onlyShowMetricDiff: false,\n    };\n    this.onResizeHandler = this.onResizeHandler.bind(this);\n    this.onCompareRunTableScrollHandler = this.onCompareRunTableScrollHandler.bind(this);\n\n    this.runDetailsTableRef = React.createRef();\n    this.compareRunViewRef = React.createRef();\n  }\n\n  onResizeHandler(e: any) {\n    const table = this.runDetailsTableRef.current;\n    if (table !== null) {\n      const containerWidth = table.clientWidth;\n      this.setState({ tableWidth: containerWidth });\n    }\n  }\n\n  onCompareRunTableScrollHandler(e: any) {\n    const blocks = this.compareRunViewRef.current.querySelectorAll('.compare-run-table');\n    blocks.forEach((_: any, index: any) => {\n      const block = blocks[index];\n      if (block !== e.target) {\n        block.scrollLeft = e.target.scrollLeft;\n      }\n    });\n  }\n\n  componentDidMount() {\n    const pageTitle = this.props.intl.formatMessage(\n      {\n        description: 'Page title for the compare runs page',\n        defaultMessage: 'Comparing {runs} MLflow Runs',\n      },\n      {\n        runs: this.props.runInfos.length,\n      },\n    );\n    Utils.updatePageTitle(pageTitle);\n\n    window.addEventListener('resize', this.onResizeHandler, true);\n    window.dispatchEvent(new Event('resize'));\n  }\n\n  componentWillUnmount() {\n    // Avoid registering `onResizeHandler` every time this component mounts\n    window.removeEventListener('resize', this.onResizeHandler, true);\n  }\n\n  getTableColumnWidth() {\n    const minColWidth = 200;\n    let colWidth = minColWidth;\n\n    // @ts-expect-error TS(4111): Property 'tableWidth' comes from an index signatur... Remove this comment to see the full error message\n    if (this.state.tableWidth !== null) {\n      // @ts-expect-error TS(4111): Property 'tableWidth' comes from an index signatur... Remove this comment to see the full error message\n      colWidth = Math.round(this.state.tableWidth / (this.props.runInfos.length + 1));\n      if (colWidth < minColWidth) {\n        colWidth = minColWidth;\n      }\n    }\n    return colWidth;\n  }\n\n  renderExperimentNameRowItems() {\n    const { experiments } = this.props;\n    const experimentNameMap = Utils.getExperimentNameMap(Utils.sortExperimentsById(experiments));\n    return this.props.runInfos.map(({ experimentId, runUuid }) => {\n      // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n      const { name, basename } = experimentNameMap[experimentId];\n      return (\n        <td className=\"meta-info\" key={runUuid}>\n          <Link to={Routes.getExperimentPageRoute(experimentId)} title={name}>\n            {basename}\n          </Link>\n        </td>\n      );\n    });\n  }\n\n  hasMultipleExperiments() {\n    return this.props.experimentIds.length > 1;\n  }\n\n  shouldShowExperimentNameRow() {\n    return this.props.hasComparedExperimentsBefore || this.hasMultipleExperiments();\n  }\n\n  getExperimentPageLink(experimentId: any, experimentName: any) {\n    return <Link to={Routes.getExperimentPageRoute(experimentId)}>{experimentName}</Link>;\n  }\n\n  getCompareExperimentsPageLinkText(numExperiments: any) {\n    return (\n      <FormattedMessage\n        defaultMessage=\"Displaying Runs from {numExperiments} Experiments\"\n        // eslint-disable-next-line max-len\n        description=\"Breadcrumb nav item to link to compare-experiments page on compare runs page\"\n        values={{ numExperiments }}\n      />\n    );\n  }\n\n  getCompareExperimentsPageLink(experimentIds: any) {\n    return (\n      <Link to={Routes.getCompareExperimentsPageRoute(experimentIds)}>\n        {this.getCompareExperimentsPageLinkText(experimentIds.length)}\n      </Link>\n    );\n  }\n\n  getExperimentLink() {\n    const { comparedExperimentIds, hasComparedExperimentsBefore, experimentIds, experiments } = this.props;\n\n    if (hasComparedExperimentsBefore) {\n      return this.getCompareExperimentsPageLink(comparedExperimentIds);\n    }\n\n    if (this.hasMultipleExperiments()) {\n      return this.getCompareExperimentsPageLink(experimentIds);\n    }\n\n    return this.getExperimentPageLink(experimentIds[0], experiments[0].name);\n  }\n\n  getTitle() {\n    return this.hasMultipleExperiments() ? (\n      <FormattedMessage\n        defaultMessage=\"Comparing {numRuns} Runs from {numExperiments} Experiments\"\n        // eslint-disable-next-line max-len\n        description=\"Breadcrumb title for compare runs page with multiple experiments\"\n        values={{\n          numRuns: this.props.runInfos.length,\n          numExperiments: this.props.experimentIds.length,\n        }}\n      />\n    ) : (\n      <FormattedMessage\n        defaultMessage=\"Comparing {numRuns} Runs from 1 Experiment\"\n        description=\"Breadcrumb title for compare runs page with single experiment\"\n        values={{\n          numRuns: this.props.runInfos.length,\n        }}\n      />\n    );\n  }\n\n  renderParamTable(colWidth: any) {\n    const dataRows = this.renderDataRows(\n      this.props.paramLists,\n      colWidth,\n      // @ts-expect-error TS(4111): Property 'onlyShowParamDiff' comes from an index s... Remove this comment to see the full error message\n      this.state.onlyShowParamDiff,\n      true,\n    );\n    if (dataRows.length === 0) {\n      return (\n        <h2>\n          <FormattedMessage\n            defaultMessage=\"No parameters to display.\"\n            description=\"Text shown when there are no parameters to display\"\n          />\n        </h2>\n      );\n    }\n    return (\n      <table\n        className=\"table compare-table compare-run-table\"\n        css={{ maxHeight: '500px' }}\n        onScroll={this.onCompareRunTableScrollHandler}\n      >\n        <tbody>{dataRows}</tbody>\n      </table>\n    );\n  }\n\n  renderMetricTable(colWidth: any, experimentIds: any) {\n    const dataRows = this.renderDataRows(\n      this.props.metricLists,\n      colWidth,\n      // @ts-expect-error TS(4111): Property 'onlyShowMetricDiff' comes from an index ... Remove this comment to see the full error message\n      this.state.onlyShowMetricDiff,\n      false,\n      (key, data) => {\n        return (\n          <Link\n            to={Routes.getMetricPageRoute(\n              this.props.runInfos.map((info) => info.runUuid).filter((uuid, idx) => data[idx] !== undefined),\n              key,\n              experimentIds,\n            )}\n            title=\"Plot chart\"\n          >\n            {key}\n            <i className=\"fas fa-chart-line\" css={{ paddingLeft: '6px' }} />\n          </Link>\n        );\n      },\n      Utils.formatMetric,\n    );\n    if (dataRows.length === 0) {\n      return (\n        <h2>\n          <FormattedMessage\n            defaultMessage=\"No metrics to display.\"\n            description=\"Text shown when there are no metrics to display\"\n          />\n        </h2>\n      );\n    }\n    return (\n      <table\n        className=\"table compare-table compare-run-table\"\n        css={{ maxHeight: '300px' }}\n        onScroll={this.onCompareRunTableScrollHandler}\n      >\n        <tbody>{dataRows}</tbody>\n      </table>\n    );\n  }\n\n  renderTagTable(colWidth: any) {\n    const dataRows = this.renderDataRows(\n      this.props.tagLists,\n      colWidth,\n      // @ts-expect-error TS(4111): Property 'onlyShowTagDiff' comes from an index sig... Remove this comment to see the full error message\n      this.state.onlyShowTagDiff,\n      true,\n    );\n    if (dataRows.length === 0) {\n      return (\n        <h2>\n          <FormattedMessage\n            defaultMessage=\"No tags to display.\"\n            description=\"Text shown when there are no tags to display\"\n          />\n        </h2>\n      );\n    }\n    return (\n      <table\n        className=\"table compare-table compare-run-table\"\n        css={{ maxHeight: '500px' }}\n        onScroll={this.onCompareRunTableScrollHandler}\n      >\n        <tbody>{dataRows}</tbody>\n      </table>\n    );\n  }\n\n  renderTimeRows(colWidthStyle: any) {\n    const unknown = (\n      <FormattedMessage\n        defaultMessage=\"(unknown)\"\n        description=\"Filler text when run's time information is unavailable\"\n      />\n    );\n    const getTimeAttributes = (runInfo: RunInfoEntity) => {\n      const startTime = runInfo.startTime;\n      const endTime = runInfo.endTime;\n      return {\n        runUuid: runInfo.runUuid,\n        startTime: startTime ? Utils.formatTimestamp(startTime) : unknown,\n        endTime: endTime ? Utils.formatTimestamp(endTime) : unknown,\n        duration: startTime && endTime ? Utils.getDuration(startTime, endTime) : unknown,\n      };\n    };\n    const timeAttributes = this.props.runInfos.map(getTimeAttributes);\n    const rows = [\n      {\n        key: 'startTime',\n        title: (\n          <FormattedMessage\n            defaultMessage=\"Start Time:\"\n            description=\"Row title for the start time of runs on the experiment compare runs page\"\n          />\n        ),\n        data: timeAttributes.map(({ runUuid, startTime }) => [runUuid, startTime]),\n      },\n      {\n        key: 'endTime',\n        title: (\n          <FormattedMessage\n            defaultMessage=\"End Time:\"\n            description=\"Row title for the end time of runs on the experiment compare runs page\"\n          />\n        ),\n        data: timeAttributes.map(({ runUuid, endTime }) => [runUuid, endTime]),\n      },\n      {\n        key: 'duration',\n        title: (\n          <FormattedMessage\n            defaultMessage=\"Duration:\"\n            description=\"Row title for the duration of runs on the experiment compare runs page\"\n          />\n        ),\n        data: timeAttributes.map(({ runUuid, duration }) => [runUuid, duration]),\n      },\n    ];\n    return rows.map(({ key, title, data }) => (\n      <tr key={key}>\n        <th scope=\"row\" className=\"head-value sticky-header\" css={colWidthStyle}>\n          {title}\n        </th>\n        {data.map(([runUuid, value]) => (\n          <td className=\"data-value\" key={runUuid} css={colWidthStyle}>\n            <Tooltip\n              title={value}\n              // @ts-expect-error TS(2322): Type '{ children: any; title: any; color: string; ... Remove this comment to see the full error message\n              color=\"gray\"\n              placement=\"topLeft\"\n              overlayStyle={{ maxWidth: '400px' }}\n              // mouseEnterDelay prop is not available in DuBois design system (yet)\n              dangerouslySetAntdProps={{ mouseEnterDelay: 1 }}\n            >\n              {value}\n            </Tooltip>\n          </td>\n        ))}\n      </tr>\n    ));\n  }\n\n  render() {\n    const { experimentIds } = this.props;\n    const { runInfos, runNames, paramLists, metricLists, runUuids } = this.props;\n\n    const colWidth = this.getTableColumnWidth();\n    const colWidthStyle = this.genWidthStyle(colWidth);\n\n    const title = this.getTitle();\n    /* eslint-disable-next-line prefer-const */\n    let breadcrumbs = [this.getExperimentLink()];\n\n    const paramsLabel = this.props.intl.formatMessage({\n      defaultMessage: 'Parameters',\n      description: 'Row group title for parameters of runs on the experiment compare runs page',\n    });\n\n    const metricsLabel = this.props.intl.formatMessage({\n      defaultMessage: 'Metrics',\n      description: 'Row group title for metrics of runs on the experiment compare runs page',\n    });\n\n    const tagsLabel = this.props.intl.formatMessage({\n      defaultMessage: 'Tags',\n      description: 'Row group title for tags of runs on the experiment compare runs page',\n    });\n    const diffOnlyLabel = this.props.intl.formatMessage({\n      defaultMessage: 'Show diff only',\n      description:\n        // eslint-disable-next-line max-len\n        'Label next to the switch that controls displaying only differing values in comparision tables on the compare runs page',\n    });\n\n    const displayChartSection = !shouldDisableLegacyRunCompareCharts();\n\n    return (\n      <div className=\"CompareRunView\" ref={this.compareRunViewRef}>\n        <PageHeader title={title} breadcrumbs={breadcrumbs} />\n        {displayChartSection && (\n          <CollapsibleSection\n            title={this.props.intl.formatMessage({\n              defaultMessage: 'Visualizations',\n              description: 'Tabs title for plots on the compare runs page',\n            })}\n          >\n            <Tabs>\n              <TabPane\n                tab={\n                  <FormattedMessage\n                    defaultMessage=\"Parallel Coordinates Plot\"\n                    // eslint-disable-next-line max-len\n                    description=\"Tab pane title for parallel coordinate plots on the compare runs page\"\n                  />\n                }\n                key=\"parallel-coordinates-plot\"\n              >\n                <ParallelCoordinatesPlotPanel runUuids={this.props.runUuids} />\n              </TabPane>\n              <TabPane\n                tab={\n                  <FormattedMessage\n                    defaultMessage=\"Scatter Plot\"\n                    description=\"Tab pane title for scatterplots on the compare runs page\"\n                  />\n                }\n                key=\"scatter-plot\"\n              >\n                <CompareRunScatter runUuids={this.props.runUuids} runDisplayNames={this.props.runDisplayNames} />\n              </TabPane>\n              <TabPane\n                tab={\n                  <FormattedMessage\n                    defaultMessage=\"Box Plot\"\n                    description=\"Tab pane title for box plot on the compare runs page\"\n                  />\n                }\n                key=\"box-plot\"\n              >\n                <CompareRunBox\n                  runUuids={runUuids}\n                  runInfos={runInfos}\n                  paramLists={paramLists}\n                  metricLists={metricLists}\n                />\n              </TabPane>\n              <TabPane\n                tab={\n                  <FormattedMessage\n                    defaultMessage=\"Contour Plot\"\n                    description=\"Tab pane title for contour plots on the compare runs page\"\n                  />\n                }\n                key=\"contour-plot\"\n              >\n                <CompareRunContour runUuids={this.props.runUuids} runDisplayNames={this.props.runDisplayNames} />\n              </TabPane>\n            </Tabs>\n          </CollapsibleSection>\n        )}\n        <CollapsibleSection\n          title={this.props.intl.formatMessage({\n            defaultMessage: 'Run details',\n            description: 'Compare table title on the compare runs page',\n          })}\n        >\n          <table\n            className=\"table compare-table compare-run-table\"\n            ref={this.runDetailsTableRef}\n            onScroll={this.onCompareRunTableScrollHandler}\n          >\n            <thead>\n              <tr>\n                <th scope=\"row\" className=\"head-value sticky-header\" css={colWidthStyle}>\n                  <FormattedMessage\n                    defaultMessage=\"Run ID:\"\n                    description=\"Row title for the run id on the experiment compare runs page\"\n                  />\n                </th>\n                {this.props.runInfos.map((r) => (\n                  <th scope=\"row\" className=\"data-value\" key={r.runUuid} css={colWidthStyle}>\n                    <Tooltip\n                      title={r.runUuid}\n                      // @ts-expect-error TS(2322): Type '{ children: Element; title: any; color: stri... Remove this comment to see the full error message\n                      color=\"gray\"\n                      placement=\"topLeft\"\n                      overlayStyle={{ maxWidth: '400px' }}\n                      mouseEnterDelay={1.0}\n                    >\n                      <Link to={Routes.getRunPageRoute(r.experimentId ?? '0', r.runUuid ?? '')}>{r.runUuid}</Link>\n                    </Tooltip>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <th scope=\"row\" className=\"head-value sticky-header\" css={colWidthStyle}>\n                  <FormattedMessage\n                    defaultMessage=\"Run Name:\"\n                    description=\"Row title for the run name on the experiment compare runs page\"\n                  />\n                </th>\n                {runNames.map((runName, i) => {\n                  return (\n                    <td className=\"data-value\" key={runInfos[i].runUuid} css={colWidthStyle}>\n                      <div className=\"truncate-text single-line\">\n                        <Tooltip\n                          title={runName}\n                          // @ts-expect-error TS(2322): Type '{ children: string; title: string; color: st... Remove this comment to see the full error message\n                          color=\"gray\"\n                          placement=\"topLeft\"\n                          overlayStyle={{ maxWidth: '400px' }}\n                          mouseEnterDelay={1.0}\n                        >\n                          {runName}\n                        </Tooltip>\n                      </div>\n                    </td>\n                  );\n                })}\n              </tr>\n              {this.renderTimeRows(colWidthStyle)}\n              {this.shouldShowExperimentNameRow() && (\n                <tr>\n                  <th scope=\"row\" className=\"data-value\">\n                    <FormattedMessage\n                      defaultMessage=\"Experiment Name:\"\n                      // eslint-disable-next-line max-len\n                      description=\"Row title for the experiment IDs of runs on the experiment compare runs page\"\n                    />\n                  </th>\n                  {this.renderExperimentNameRowItems()}\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </CollapsibleSection>\n        <CollapsibleSection title={paramsLabel}>\n          <Switch\n            label={diffOnlyLabel}\n            aria-label={[paramsLabel, diffOnlyLabel].join(' - ')}\n            // @ts-expect-error TS(4111): Property 'onlyShowParamDiff' comes from an index s... Remove this comment to see the full error message\n            checked={this.state.onlyShowParamDiff}\n            onChange={(checked, e) => this.setState({ onlyShowParamDiff: checked })}\n          />\n          <Spacer size=\"lg\" />\n          {this.renderParamTable(colWidth)}\n        </CollapsibleSection>\n        <CollapsibleSection title={metricsLabel}>\n          <Switch\n            label={diffOnlyLabel}\n            aria-label={[metricsLabel, diffOnlyLabel].join(' - ')}\n            // @ts-expect-error TS(4111): Property 'onlyShowMetricDiff' comes from an index ... Remove this comment to see the full error message\n            checked={this.state.onlyShowMetricDiff}\n            onChange={(checked, e) => this.setState({ onlyShowMetricDiff: checked })}\n          />\n          <Spacer size=\"lg\" />\n          {this.renderMetricTable(colWidth, experimentIds)}\n        </CollapsibleSection>\n        <CollapsibleSection title={tagsLabel}>\n          <Switch\n            label={diffOnlyLabel}\n            aria-label={[tagsLabel, diffOnlyLabel].join(' - ')}\n            // @ts-expect-error TS(4111): Property 'onlyShowTagDiff' comes from an index sig... Remove this comment to see the full error message\n            checked={this.state.onlyShowTagDiff}\n            onChange={(checked, e) => this.setState({ onlyShowTagDiff: checked })}\n          />\n          <Spacer size=\"lg\" />\n          {this.renderTagTable(colWidth)}\n        </CollapsibleSection>\n      </div>\n    );\n  }\n\n  genWidthStyle(width: any) {\n    return {\n      width: `${width}px`,\n      minWidth: `${width}px`,\n      maxWidth: `${width}px`,\n    };\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  renderDataRows(\n    list: any,\n    colWidth: any,\n    onlyShowDiff: any,\n    highlightDiff = false,\n    headerMap = (key: any, data: any) => key,\n    formatter = (value: any) => value,\n  ) {\n    // @ts-expect-error TS(2554): Expected 2 arguments, but got 1.\n    const keys = CompareRunUtil.getKeys(list);\n    const data = {};\n    const checkHasDiff = (values: any) => values.some((x: any) => x !== values[0]);\n    // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    keys.forEach((k) => (data[k] = { values: Array(list.length).fill(undefined) }));\n    list.forEach((records: any, i: any) => {\n      // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n      records.forEach((r: any) => (data[r.key].values[i] = r.value));\n    });\n    // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    keys.forEach((k) => (data[k].hasDiff = checkHasDiff(data[k].values)));\n\n    const colWidthStyle = this.genWidthStyle(colWidth);\n\n    return (\n      keys\n        // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n        .filter((k) => !onlyShowDiff || data[k].hasDiff)\n        .map((k) => {\n          // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n          const { values, hasDiff } = data[k];\n          const rowClass = highlightDiff && hasDiff ? 'diff-row' : undefined;\n          return (\n            <tr key={k} className={rowClass}>\n              <th scope=\"row\" className=\"head-value sticky-header\" css={colWidthStyle}>\n                {headerMap(k, values)}\n              </th>\n              {values.map((value: any, i: any) => {\n                const cellText = value === undefined ? '' : formatter(value);\n                return (\n                  <td className=\"data-value\" key={this.props.runInfos[i].runUuid} css={colWidthStyle}>\n                    <Tooltip\n                      title={cellText}\n                      // @ts-expect-error TS(2322): Type '{ children: Element; title: any; color: stri... Remove this comment to see the full error message\n                      color=\"gray\"\n                      placement=\"topLeft\"\n                      overlayStyle={{ maxWidth: '400px' }}\n                      mouseEnterDelay={1.0}\n                    >\n                      <span className=\"truncate-text single-line\">{cellText}</span>\n                    </Tooltip>\n                  </td>\n                );\n              })}\n            </tr>\n          );\n        })\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => {\n  const { comparedExperimentIds, hasComparedExperimentsBefore } = state.compareExperiments;\n  const runInfos: any = [];\n  const metricLists: any = [];\n  const paramLists: any = [];\n  const tagLists: any = [];\n  const runNames: any = [];\n  const runDisplayNames: any = [];\n  const { experimentIds, runUuids } = ownProps;\n  const experiments = experimentIds.map((experimentId: any) => getExperiment(experimentId, state));\n  runUuids.forEach((runUuid: any) => {\n    const runInfo = getRunInfo(runUuid, state);\n    runInfos.push(runInfo);\n    metricLists.push(Object.values(getLatestMetrics(runUuid, state)));\n    paramLists.push(Object.values(getParams(runUuid, state)));\n    const runTags = getRunTags(runUuid, state);\n    const visibleTags = Utils.getVisibleTagValues(runTags).map(([key, value]) => ({\n      key,\n      value,\n    }));\n    tagLists.push(visibleTags);\n    runDisplayNames.push(Utils.getRunDisplayName(runInfo, runUuid));\n    runNames.push(Utils.getRunName(runInfo));\n  });\n  return {\n    experiments,\n    runInfos,\n    metricLists,\n    paramLists,\n    tagLists,\n    runNames,\n    runDisplayNames,\n    comparedExperimentIds,\n    hasComparedExperimentsBefore,\n  };\n};\n\n// @ts-expect-error TS(2769): No overload matches this call.\nexport default connect(mapStateToProps)(injectIntl(CompareRunView));\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React, { Component } from 'react';\nimport qs from 'qs';\nimport { connect } from 'react-redux';\nimport { getRunApi, getExperimentApi } from '../actions';\nimport RequestStateWrapper from '../../common/components/RequestStateWrapper';\nimport CompareRunView from './CompareRunView';\nimport { getUUID } from '../../common/utils/ActionUtils';\nimport { PageContainer } from '../../common/components/PageContainer';\nimport { withRouterNext } from '../../common/utils/withRouterNext';\nimport type { WithRouterNextProps } from '../../common/utils/withRouterNext';\nimport { withErrorBoundary } from '../../common/utils/withErrorBoundary';\nimport ErrorUtils from '../../common/utils/ErrorUtils';\n\ntype CompareRunPageProps = {\n  experimentIds: string[];\n  runUuids: string[];\n  dispatch: (...args: any[]) => any;\n};\n\nclass CompareRunPageImpl extends Component<CompareRunPageProps> {\n  requestIds: any;\n\n  constructor(props: CompareRunPageProps) {\n    super(props);\n    this.requestIds = [];\n  }\n\n  fetchExperiments() {\n    return this.props.experimentIds.map((experimentId) => {\n      const experimentRequestId = getUUID();\n      this.props.dispatch(getExperimentApi(experimentId, experimentRequestId));\n      return experimentRequestId;\n    });\n  }\n\n  componentDidMount() {\n    this.requestIds.push(...this.fetchExperiments());\n    this.props.runUuids.forEach((runUuid) => {\n      const requestId = getUUID();\n      this.requestIds.push(requestId);\n      this.props.dispatch(getRunApi(runUuid, requestId));\n    });\n  }\n\n  render() {\n    return (\n      <PageContainer>\n        <RequestStateWrapper\n          requestIds={this.requestIds}\n          // eslint-disable-next-line no-trailing-spaces\n        >\n          <CompareRunView runUuids={this.props.runUuids} experimentIds={this.props.experimentIds} />\n        </RequestStateWrapper>\n      </PageContainer>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: WithRouterNextProps) => {\n  const { location } = ownProps;\n  const searchValues = qs.parse(location.search);\n  // @ts-expect-error TS(2345): Argument of type 'string | string[] | ParsedQs | P... Remove this comment to see the full error message\n  const runUuids = JSON.parse(searchValues['?runs']);\n  // @ts-expect-error TS(2345): Argument of type 'string | string[] | ParsedQs | P... Remove this comment to see the full error message\n  const experimentIds = JSON.parse(searchValues['experiments']);\n  return { experimentIds, runUuids };\n};\n\nconst CompareRunPage = withRouterNext(connect(mapStateToProps)(CompareRunPageImpl));\n\nexport default withErrorBoundary(ErrorUtils.mlflowServices.RUN_TRACKING, CompareRunPage);\n"],"names":["_ref2","name","styles","CollapsibleSection","props","title","forceOpen","showServerError","defaultCollapsed","onChange","activeKeyProp","activeKey","defaultActiveKey","formatMessage","useIntl","theme","useDesignSystemTheme","_jsx","Collapse","className","css","classNames","wrapper","bordered","expandIcon","_ref","isActive","ChevronRightIcon","id","defaultMessage","rotate","children","Panel","header","_css","importantify","color","colors","textPrimary","SectionErrorBoundary","position","outline","defaultProps","TabPane","Tabs","_ref3","_ref4","_ref5","CompareRunView","Component","constructor","super","compareRunViewRef","runDetailsTableRef","this","state","tableWidth","onlyShowParamDiff","onlyShowTagDiff","onlyShowMetricDiff","onResizeHandler","bind","onCompareRunTableScrollHandler","React","e","table","current","containerWidth","clientWidth","setState","blocks","querySelectorAll","forEach","_","index","block","target","scrollLeft","componentDidMount","pageTitle","intl","runs","runInfos","length","Utils","updatePageTitle","window","addEventListener","dispatchEvent","Event","componentWillUnmount","removeEventListener","getTableColumnWidth","colWidth","Math","round","renderExperimentNameRowItems","experiments","experimentNameMap","getExperimentNameMap","sortExperimentsById","map","experimentId","runUuid","basename","Link","to","Routes","getExperimentPageRoute","hasMultipleExperiments","experimentIds","shouldShowExperimentNameRow","hasComparedExperimentsBefore","getExperimentPageLink","experimentName","getCompareExperimentsPageLinkText","numExperiments","FormattedMessage","values","getCompareExperimentsPageLink","getCompareExperimentsPageRoute","getExperimentLink","comparedExperimentIds","getTitle","numRuns","renderParamTable","dataRows","renderDataRows","paramLists","onScroll","renderMetricTable","metricLists","key","data","_jsxs","getMetricPageRoute","info","filter","uuid","idx","undefined","formatMetric","renderTagTable","tagLists","renderTimeRows","colWidthStyle","unknown","timeAttributes","runInfo","startTime","endTime","formatTimestamp","duration","getDuration","_ref6","_ref7","_ref8","_ref9","scope","_ref10","value","Tooltip","placement","overlayStyle","maxWidth","dangerouslySetAntdProps","mouseEnterDelay","render","runNames","runUuids","genWidthStyle","breadcrumbs","paramsLabel","metricsLabel","tagsLabel","diffOnlyLabel","displayChartSection","shouldDisableLegacyRunCompareCharts","ref","PageHeader","tab","ParallelCoordinatesPlotPanel","CompareRunScatter","runDisplayNames","CompareRunBox","CompareRunContour","r","_r$experimentId","_r$runUuid","getRunPageRoute","runName","i","Switch","label","join","checked","Spacer","size","width","minWidth","list","onlyShowDiff","highlightDiff","arguments","headerMap","formatter","keys","CompareRunUtil","getKeys","k","Array","fill","records","hasDiff","some","x","rowClass","cellText","connect","mapStateToProps","ownProps","compareExperiments","getExperiment","getRunInfo","push","Object","getLatestMetrics","getParams","runTags","getRunTags","visibleTags","getVisibleTagValues","_ref11","getRunDisplayName","getRunName","injectIntl","CompareRunPageImpl","requestIds","fetchExperiments","experimentRequestId","getUUID","dispatch","getExperimentApi","requestId","getRunApi","PageContainer","RequestStateWrapper","CompareRunPage","withRouterNext","location","searchValues","qs","search","JSON","parse","withErrorBoundary","ErrorUtils","mlflowServices","RUN_TRACKING"],"sourceRoot":""}